{"version":3,"sources":["media/home.png","../node_modules/react-bootstrap/esm/Container.js","components/navigation/search_result_text.js","components/navigation/search_result.js","components/navigation/selected_genius_result.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","Container","React","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","createElement","_extends","classNames","displayName","defaultProps","SearchResultText","text","style","position","height","opacity","width","display","alignItems","backgroundColor","whiteSpace","overflow","textOverflow","color","fontSize","margin","SearchResult","forwardingUrl","imgUrl","bottomText","centerText","topText","fadeInMillis","history","useHistory","useState","hovering","setHovering","setOpacity","useEffect","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","Col","xs","transition","padding","maxHeight","maxWidth","minHeight","onMouseEnter","onMouseLeave","Button","border","onClick","push","Image","rounded","src","top","left","transform","bottom","SYNCHRONIZATION_DATA","gql","DISPLAY_QUERY","SelectedGeniusResult","geniusID","useParams","useQuery","variables","data","synchronizationData","syncError","loading","error","id","displayLyrics","displayLoading","displayError","returnSyncStatus","console","log","justifyContent","textAlign","searchResult","paddingRight","returnLyrics","map","line","index","minWidth","key","marginBottom","paddingLeft","clientId","SIGNED_IN_USER","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","setParentUserName","useWindowSize","innerWidth","innerHeight","tokenId","setTokenId","useLazyQuery","onCompleted","userData","existsInDB","userName","setShowAlert","fetchPolicy","fetchUserInfo","inputUsername","setInputUsername","skip","userNameTaken","showAlert","useMutation","postUser","Alert","zIndex","show","onClose","variant","Heading","Form","onSubmit","e","preventDefault","onChange","target","value","Control","marginTop","placeholder","autoFocus","disabled","Navbar","sticky","bg","Brand","size","alt","require","Collapse","Nav","marginRight","href","data-icon","data-size","data-show-count","aria-label","DropdownButton","title","alignSelf","Dropdown","Item","onLogoutSuccess","onSuccess","response","onFailure","isSignedIn"],"mappings":"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","file":"static/js/10.d284d9f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from 'react';\nexport default function SearchResultText({ text, style }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 30,\n        opacity: 0.8,\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        ...style,\n      }}\n    >\n      <p\n        style={{\n          width: '100%',\n          whiteSpace: 'no-wrap',\n          color: 'black',\n          fontSize: 20,\n          margin: 0,\n        }}\n      >\n        {text}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport SearchResultText from 'components/navigation/search_result_text';\nexport default function SearchResult({ forwardingUrl, imgUrl, bottomText, centerText, topText, fadeInMillis, style }) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  const [hovering, setHovering] = useState(false);\n\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise((resolve) => setTimeout(resolve, millis));\n      setOpacity(1);\n    }\n    sleepBeforeAppear(fadeInMillis);\n  }, [fadeInMillis]);\n\n  return (\n    <Col\n      xs={12}\n      style={{\n        transition: 'opacity 0.5s',\n        opacity: opacity,\n        margin: 10,\n        padding: 0,\n        maxHeight: 347.5,\n        maxWidth: 347.5,\n        minHeight: '100%',\n        ...style,\n      }}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    >\n      <Button\n        style={{ width: '100%', height: '100%', padding: 0, border: 0,}}\n        onClick={() => history.push(forwardingUrl)}\n      >\n        <Image\n          className={hovering ? 'shadow-lg' : ''}\n          style={{ maxHeight: 347.5, height: '100%', width: 'auto', maxWidth: '100%', transition: 'all 200ms', }}\n          rounded\n          src={imgUrl}\n        />\n        <SearchResultText style={{ top: 0 }} text={topText} />\n        <SearchResultText\n          style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: 'auto' }}\n          text={centerText}\n        />\n        <SearchResultText style={{ bottom: 0 }} text={bottomText} />\n      </Button>\n    </Col>\n  );\n}\n","import React from 'react';\nimport Loading from 'components/universal/loading';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport CustomNavBar from 'components/universal/custom_navbar';\nimport SearchResult from 'components/navigation/search_result';\n\nconst SYNCHRONIZATION_DATA = gql`\n  query synchronizationdata($geniusID: String) {\n    synchronizationData(geniusID: $geniusID) {\n      youtubeID\n      searchResult {\n        imgUrl\n        bottomText\n        topText\n        forwardingUrl\n      }\n    }\n  }\n`;\n\nconst DISPLAY_QUERY = gql`\n  query displaylyrics($id: String) {\n    displayLyrics(id: $id)\n  }\n`;\n\nexport default function SelectedGeniusResult() {\n  let { geniusID } = useParams();\n  const history = useHistory();\n\n  const { data: { synchronizationData } = {}, loading: syncLoading, error: syncError } = useQuery(SYNCHRONIZATION_DATA, {\n    variables: { geniusID: geniusID },\n  });\n\n  //fetch the lyrics\n  const { data: { displayLyrics } = {}, loading: displayLoading, error: displayError } = useQuery(DISPLAY_QUERY, {\n    variables: { id: geniusID },\n  });\n\n  var returnSyncStatus = <Loading />;\n\n  //lyrics exist, and empty sync set\n  if (!displayError && syncError) {\n    returnSyncStatus = (\n      <Container>\n        <Row className='justify-content-md-center'>\n          <p style={{ fontSize: 30 }}>No synchronizations exist.</p>\n        </Row>\n        <Row className='justify-content-md-center'>\n          <Button onClick={() => history.push(`/sync/0/${geniusID}`)}>\n            <p>Create synchronization for this song.</p>\n          </Button>\n        </Row>\n      </Container>\n    );\n  } else if (synchronizationData) {\n    console.log(synchronizationData)\n    returnSyncStatus = (\n      <Container>\n        <Row style={{ justifyContent: 'center' }}>\n          <p style={{ textAlign: 'center' }}>Synchronizations</p>\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>\n          <SearchResult {...synchronizationData[0].searchResult} fadeInMillis={100} style={{ paddingRight: 0 }} />\n        </Row>\n      </Container>\n    );\n  }\n\n  var returnLyrics = <Loading />;\n  if (!displayLoading) {\n    returnLyrics = displayLyrics.map((line, index) => {\n      return (\n        <Row className='justify-content-md-center' style={{ minWidth: '100%' }} key={index}>\n          <p style={{ marginBottom: 10, fontSize: '20px' }}>{line}</p>\n        </Row>\n      );\n    });\n  }\n  return (\n    <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n      <CustomNavBar />\n      <Row style={{ marginBottom: '20px' }} className='justify-content-md-center'>\n        {returnSyncStatus}\n      </Row>\n      <Row className='justify-content-md-center'>{returnLyrics}</Row>\n    </Container>\n  );\n}\n","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query userdata($tokenId: String) {\n    userData(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId, setParentUserName }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { userData } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!userData.existsInDB) {\n        setShowAlert(true);\n      }\n      //if a userName listener was passed from a parent component then set the value once its available\n      else if (setParentUserName) {\n        setParentUserName(userData.userName);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !userData || userData.existsInDB || inputUsername === '',\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        onClose={() => setShowAlert(false)}\n        variant={userNameTaken ? 'danger' : 'primary'}\n      >\n        {\n          <>\n            <Alert.Heading>{userNameTaken ? 'This username is taken' : 'Create a username for your account'}</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (!userNameTaken) {\n                  postUser();\n                }\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt='Home' src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {userData && userData.existsInDB ? (\n            <DropdownButton title={`Signed in as ${userData.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${userData.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                onFailure={(response) => {\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}