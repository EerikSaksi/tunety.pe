{"version":3,"sources":["components/lyrics/syncing/lyrics_sync_router.js","components/universal/custom_navbar.js","media/home.png"],"names":["SearchResultForm","lazy","VideoClipper","GENIUS_SONG_DATA","gql","YOUTUBE_SEARCH_RESULTS","LyricsSyncRouter","history","useHistory","useParams","youtubeID","geniusID","useState","input","setInput","geniusSong","useQuery","variables","id","skip","onCompleted","console","log","geniusSongData","text","data","query","youtubeSearch","youtubeSearchLoading","loading","youtubeSearchError","error","imgUrl","fluid","style","paddingLeft","paddingRight","className","fontSize","width","height","src","fallback","results","youtubeSearchResults","undefined","formText","formFontSize","defaultValue","centered","push","CustomNavbar","centerContent","customContent","sticky","bg","variant","Brand","onClick","justifyContent","size","require","top","Collapse","position","transform","left","href","data-icon","data-size","data-show-count","aria-label","module","exports"],"mappings":"ooBASA,IAAMA,EAAmBC,gBAAK,kBAAM,uDAC9BC,EAAeD,gBAAK,kBAAM,+DAC1BE,EAAmBC,YAAH,KAShBC,EAAyBD,YAAH,KASb,SAASE,IACtB,IAAMC,EAAUC,cADyB,EAGbC,cAAvBC,EAHoC,EAGpCA,UAAWC,EAHyB,EAGzBA,SAHyB,EAIfC,mBAAS,IAJM,mBAIlCC,EAJkC,KAI3BC,EAJ2B,KAO5BC,EAAcC,YAASb,EAAkB,CACpDc,UAAW,CAACC,GAAIP,GAChBQ,KAAMR,GAAyB,MAAbA,EAClBS,YAAa,WACXC,QAAQC,IAAIP,EAAWQ,eAAeC,MACtCV,EAASC,EAAWQ,eAAeC,SALhCC,KAPkC,EAgB+CT,YAASX,EAAwB,CACvHY,UAAW,CAACS,MAAOb,KADRc,EAhB4B,EAgBlCF,KAA8BG,EAhBI,EAgBbC,QAAsCC,EAhBzB,EAgBkBC,MAK3D,GAAiB,MAAbpB,EAAkB,CAEpB,GAAkB,MAAdD,EAAmB,CACrB,GAAIK,EAAY,CAAC,IAAD,EACSA,EAAWQ,eAA3BS,EADO,EACPA,OAAQR,EADD,EACCA,KACf,OACE,kBAAC,IAAD,CAAWS,OAAK,EAACC,MAAO,CAACC,YAAa,EAAGC,aAAc,IACrD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,UAAU,6BACb,uBAAGH,MAAO,CAACI,SAAU,KAAMd,IAE7B,kBAAC,IAAD,CAAKa,UAAU,6BACb,kBAAC,IAAD,CAAOH,MAAO,CAACK,MAAO,MAAOC,OAAQ,OAAQC,IAAKT,KAEpD,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAClB,kBAAC1C,EAAD,CAAkB2C,QAAShB,EAAgBA,EAAciB,0BAAuBC,EAAWhC,MAAOA,EAAOC,SAAUA,EAAUgC,SAAWhB,EAAqB,iFAAmF,6CAA+CiB,aAAc,GAAIlB,QAASD,EAAsBoB,aAAclB,OAAqBe,EAAYrB,MAMrY,OACE,kBAAC,IAAD,CAAWS,OAAK,EAACC,MAAO,CAACC,YAAa,EAAGC,aAAc,IACrD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,UAAU,6BACb,kBAAC,IAAD,QAQR,OACE,kBAAC,WAAD,CAAUK,SAAU,kBAAC,IAAD,CAASO,UAAQ,KACnC,kBAAC/C,EAAD,OASY,MAAdQ,GACFH,EAAQ2C,KAAK,O,gCC/FnB,6FAQe,SAASC,EAAT,GAAuD,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,cAE7C9C,EAAUC,cAChB,OACE,kBAAC,IAAD,CAAQ0B,MAAO,CAACM,OAAQ,IAAKc,OAAO,MAAMC,GAAG,YAAYC,QAAQ,QAC/D,kBAAC,IAAOC,MAAR,CAAcC,QAAS,kBAAMnD,EAAQ2C,KAAK,OACxC,kBAAC,IAAD,CAAQM,QAAQ,kBAAkBtB,MAAS,CAACyB,eAAgB,OAAQpB,MAAO,IAAKC,OAAQ,IAAKoB,KAAO,MAClG,yBAAKnB,IAAKoB,EAAQ,IAAyB3B,MAAO,CAAC4B,IAAK,EAAGtB,OAAQ,OAAQD,MAAO,YAGrFc,EACD,kBAAC,IAAOU,SAAR,CAAiB7B,MAAO,CAAC8B,SAAU,WAAYC,UAAW,sBAAuBC,KAAM,QACpFd,GAEH,kBAAC,IAAD,CAAKf,UAAU,WACb,kBAAC,IAAD,CAAc8B,KAAK,+CAA+CC,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,4CAA/I,Y,mBCvBRC,EAAOC,QAAU,IAA0B","file":"static/js/12.da7bf2dd.chunk.js","sourcesContent":["import React, {useState, lazy, Suspense} from 'react';\nimport Loading from 'components/universal/loading'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks';\nimport {useParams, useHistory} from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Image from 'react-bootstrap/Image'\nimport CustomNavBar from 'components/universal/custom_navbar'\nconst SearchResultForm = lazy(() => import('components/navigation/search_results_form'))\nconst VideoClipper = lazy(() => import('components/video_player/video_clipper'))\nconst GENIUS_SONG_DATA = gql`\n  query geniussongdata($id: String){\n    geniusSongData(id: $id){\n      id\n      text\n      imgUrl\n    }\n  }\n`\nconst YOUTUBE_SEARCH_RESULTS = gql`\n  query youtubesearchresults($query: String){\n    youtubeSearchResults(query: $query){\n      id\n      text\n      imgUrl\n    }\n  }\n`\nexport default function LyricsSyncRouter() {\n  const history = useHistory()\n  //y = youtube id, g = genius id\n  let {youtubeID, geniusID} = useParams();\n  const [input, setInput] = useState('')\n\n  //fetch song data if the  genius id parameter is defined\n  const {data: geniusSong} = useQuery(GENIUS_SONG_DATA, {\n    variables: {id: geniusID},\n    skip: geniusID && geniusID === '0',\n    onCompleted: () => {\n      console.log(geniusSong.geniusSongData.text)\n      setInput(geniusSong.geniusSongData.text)\n    }\n  })\n\n  const {data: youtubeSearch, loading: youtubeSearchLoading, error: youtubeSearchError} = useQuery(YOUTUBE_SEARCH_RESULTS, {\n    variables: {query: input},\n  })\n\n  //not missing genius ID\n  if (geniusID !== '0') {\n    //missing youtube url, provide youtube search input to find one\n    if (youtubeID === '0') {\n      if (geniusSong) {\n        const {imgUrl, text} = geniusSong.geniusSongData\n        return (\n          <Container fluid style={{paddingLeft: 0, paddingRight: 0}}>\n            <CustomNavBar />\n            <Row className=\"justify-content-md-center\">\n              <p style={{fontSize: 30}}>{text}</p>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Image style={{width: '15%', height: '15%'}} src={imgUrl} />\n            </Row>\n            <Suspense fallback={<Loading />}>\n              <SearchResultForm results={youtubeSearch ? youtubeSearch.youtubeSearchResults : undefined} input={input} setInput={setInput} formText={ youtubeSearchError ? \"Search for a YouTube video or enter enter a Youtube URL to sync the lyrics to:\" : \"Enter a Youtube URL to sync the lyrics to:\" } formFontSize={30} loading={youtubeSearchLoading} defaultValue={youtubeSearchError ? undefined : text} />\n            </Suspense>\n          </Container>\n        )\n      }\n      else {\n        return (\n          <Container fluid style={{paddingLeft: 0, paddingRight: 0}}>\n            <CustomNavBar />\n            <Row className=\"justify-content-md-center\">\n              <Loading />\n            </Row>\n          </Container>\n        )\n      }\n    }\n    //both found, provide UI for videoclipping\n    else {\n      return (\n        <Suspense fallback={<Loading centered/>}>\n          <VideoClipper/>\n        </Suspense>\n      )\n    }\n  }\n\n  //missing genius ID\n  else {\n    //also missing YouTube ID, just route the user to the home page because they somehow messed up\n    if (youtubeID === '0') {\n      history.push('/')\n    }\n  }\n}\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from \"react-router-dom\";\nimport GitHubButton from 'react-github-btn'\n\nexport default function CustomNavbar({centerContent, customContent}) {\n\n  const history = useHistory()\n  return (\n    <Navbar style={{height: 60}} sticky='top' bg='secondary' variant='dark'>\n      <Navbar.Brand onClick={() => history.push('/')}>\n        <Button variant='outline-primary' style = {{justifyContent: 'left', width: 142, height: 44}} size = 'sm'>\n          <img src={require('../../media/home.png')} style={{top: 0, height: '100%', width: '100%'}} />\n        </Button>\n      </Navbar.Brand>\n      {customContent}\n      <Navbar.Collapse style={{position: 'absolute', transform: 'translate(-50%, 0%)', left: '50%'}}>\n        {centerContent}\n      </Navbar.Collapse>\n      <Nav className='ml-auto'>\n        <GitHubButton href=\"https://github.com/EerikSaksi/type_to_lyrics\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star EerikSaksi/type_to_lyrics on GitHub\">Star</GitHubButton>\n      </Nav>\n    </Navbar >\n\n  )\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";"],"sourceRoot":""}