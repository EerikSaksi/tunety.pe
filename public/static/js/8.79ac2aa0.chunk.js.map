{"version":3,"sources":["components/navigation/home.js","components/universal/custom_navbar.js","icons8-home.svg","components/navigation/search_result.js","components/navigation/search_results_form.js"],"names":["QUERY","gql","Home","useState","input","setInput","useQuery","variables","query","skip","data","loading","fluid","style","paddingLeft","paddingRight","results","geniusSearchResults","undefined","formText","CustomNavbar","centerContent","customContent","history","useHistory","height","sticky","bg","variant","Brand","onClick","push","src","require","width","Collapse","position","transform","left","className","href","data-icon","data-size","data-show-count","aria-label","module","exports","SearchResult","id","imgUrl","text","origin","fadeInMillis","customStyle","location","useLocation","opacity","setOpacity","useEffect","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","xs","transition","marginTop","minHeight","minWidth","url","pathname","forwardingUrl","substring","zeroLocation","indexOf","routeURL","fontSize","SearchResultForm","formFontSize","defaultValue","ref","useRef","current","focus","onChange","e","target","value","Label","textAlign","Control","placeholder","Check","label","justifyContent","map","result","index","key"],"mappings":"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","file":"static/js/8.79ac2aa0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport SearchResultForm from 'components/navigation/search_results_form'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks';\nimport CustomNavBar from 'components/universal/custom_navbar'\nimport Container from 'react-bootstrap/Container'\nconst QUERY = gql`\nquery geniussearchresults($query: String){\n  geniusSearchResults(query: $query){\n    id \n    imgUrl\n    text\n    origin\n  }\n}`\nexport default function Home() {\n  //input of the form, passed to the form but declared here as required for checking if data needs to be fetched\n  const [input, setInput] = useState('');\n\n  const {data, loading} = useQuery(QUERY, {\n    variables: {query: input},\n    skip: input === ''\n  });\n\n  return (\n    <Container fluid style={{paddingLeft: 0, paddingRight: 0}}>\n      <CustomNavBar />\n      <SearchResultForm results={data ? data.geniusSearchResults : undefined} input={input} setInput={setInput} formText={\"Search for an artist and/or song or enter YouTube URL\"} loading={loading} />\n    </Container>\n  )\n}\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from \"react-router-dom\";\nimport GitHubButton from 'react-github-btn'\nexport default function CustomNavbar({centerContent, customContent}) {\n  const history = useHistory()\n  return (\n    <Navbar style={{height: 60}} sticky='top' bg='secondary' variant='dark'>\n      <Navbar.Brand onClick={() => history.push('/')}>\n        <Button variant='light'>\n          <img src={require('icons8-home.svg')} style={{height: 30, width: 30}} />\n        </Button>\n      </Navbar.Brand>\n      {customContent}\n      <Navbar.Collapse style={{position: 'absolute', transform: 'translate(-50%, 0%)', left: '50%'}}>\n        {centerContent}\n      </Navbar.Collapse>\n      <Nav className='ml-auto'>\n        <GitHubButton href=\"https://github.com/EerikSaksi/type_to_lyrics\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star EerikSaksi/type_to_lyrics on GitHub\">Star</GitHubButton>\n      </Nav>\n    </Navbar >\n\n  )\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/icons8-home.5ecf30e7.svg\";","import React, {useState, useEffect} from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory, useLocation} from \"react-router-dom\";\nexport default function SearchResult({id, imgUrl, text, origin, fadeInMillis, customStyle}) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  //used to acquire context as to where to route given the parameters\n  const location = useLocation()\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0)\n  const routeURL = () => {\n    const url = location.pathname\n    //route from home to either the page of the YouTube or Genius page\n    if (url === '/') {\n      var forwardingUrl = ''\n      switch(origin){\n        case 'youtube': \n          forwardingUrl = `/y/${id}` \n          break\n        case 'genius': \n          forwardingUrl = `/g/${id}` \n          break\n        case 'syncData':\n          forwardingUrl = `/p/${id}` \n          break\n      }\n      history.push(forwardingUrl)\n    }\n    //replace the null id (0) with the supplied id\n    else if (url.substring(0, 3) === '/s/') {\n      const zeroLocation = url.indexOf('/0/')\n      history.push(url.substring(0, zeroLocation) + `/${id}/` + url.substring(zeroLocation + 3))\n    }\n    else if (url.substring(0, 3) === '/g/') {\n      // /p/:youtubeID/:geniusID\n      history.push(`/p/${id}/${url.substring(3)}`)\n    }\n  }\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise(resolve => setTimeout(resolve, millis));\n      setOpacity(1)\n    }\n    sleepBeforeAppear(fadeInMillis)\n  }, [])\n  return (\n    <Col xs={4} style={{transition: 'opacity 0.5s', opacity: opacity, marginTop: '10px', paddingLeft: '0px', paddingRight: '10px', minHeight: '100%', ...customStyle}}>\n      <Button style={{minWidth: '100%', minHeight: '100%'}} onClick={() => routeURL()}>\n        <Col>\n          <Image src={imgUrl} style={{width: '50%', height: '50%'}} />\n        </Col>\n        <Col>\n          <p style={{fontSize: '20px'}}>\n            {text}\n          </p>\n        </Col>\n      </Button>\n    </Col>\n  )\n}\n","import React, {useRef, useEffect} from 'react'\nimport Loading from 'components/universal/loading'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport SearchResult from 'components/navigation/search_result'\nexport default function SearchResultForm({results, input, setInput, formText, formFontSize, loading, defaultValue}) {\n  const ref = useRef(null)\n  useEffect(() => {\n    ref.current.focus()\n    if (defaultValue) {\n      setInput(defaultValue)\n    }\n  }, [])\n  return (\n    <Container fluid={'md'}>\n      <Row className=\"justify-content-md-center\">\n        <Form onChange={(e) => setInput(e.target.value)}>\n          <Form.Label style={{fontSize: '40px'}}> <p style={{textAlign: 'center', fontSize: formFontSize}}>{formText}</p> </Form.Label>\n          <Form.Control defaultValue={defaultValue ? defaultValue : \"\"} ref={ref} placeholder='Search' />\n          <Form.Check\n            style ={{fontSize: 15}}\n            label = 'Only show synchronized songs'\n            className=\"justify-content-md-center\"\n          />\n\n        </Form>\n      </Row>\n      <Row style={{justifyContent: 'center', marginTop: 5}}>\n        {input === ''\n          ? null\n          : !loading && results && results !== []\n            ? results.map((result, index) => <SearchResult key={index} {...result} fadeInMillis={(index + 1) * 100} />)\n            : <Loading />\n        }\n      </Row>\n    </Container>\n  )\n} \n"],"sourceRoot":""}