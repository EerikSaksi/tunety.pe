{"version":3,"sources":["components/universal/google_login_secrets.js","components/universal/custom_navbar.js","media/home.png","components/universal/custom_card.js","components/navigation/search_result_text.js","components/navigation/search_result.js","components/navigation/search_result_horizontal_view.js","components/navigation/profile.js"],"names":["clientId","SIGNED_IN_USER","gql","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","setParentUserName","history","useHistory","useWindowSize","innerWidth","innerHeight","useState","tokenId","setTokenId","useLazyQuery","variables","onCompleted","userData","existsInDB","userName","setShowAlert","fetchPolicy","fetchUserInfo","data","inputUsername","setInputUsername","useQuery","skip","userNameTaken","showAlert","useMutation","postUser","Alert","className","style","position","left","top","transform","zIndex","show","onClose","variant","Heading","Form","onSubmit","e","preventDefault","onChange","target","value","Control","marginTop","placeholder","autoFocus","Button","disabled","onClick","Navbar","height","sticky","bg","Brand","push","justifyContent","width","size","alt","src","require","Collapse","Nav","marginRight","marginBottom","href","data-icon","data-size","data-show-count","aria-label","DropdownButton","title","alignSelf","Dropdown","Item","paddingLeft","paddingRight","onLogoutSuccess","fontSize","onSuccess","response","onFailure","isSignedIn","module","exports","CustomCard","children","imgOverlay","linkText","linkHref","opacity","setOpacity","useInView","threshold","inViewRef","inView","useEffect","ref","transition","border","Title","textAlign","Link","ImgOverlay","SearchResultText","text","display","alignItems","backgroundColor","whiteSpace","overflow","textOverflow","color","margin","SearchResult","forwardingUrl","imgUrl","bottomText","centerText","topText","fadeInMillis","hovering","setHovering","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","Col","xs","padding","maxHeight","maxWidth","minHeight","onMouseEnter","onMouseLeave","Image","rounded","bottom","SearchResultHorizontalView","searchResults","dateClassified","displayDate","mappedResults","filter","searchResult","dateClassifier","map","index","length","Row","overflowX","USER_DATA","Profile","cardContent","useParams","loading","selectedTab","setSelectedTab","centered","gameStats","gameStat","synchronizations","synchronization","console","log","activeKey","onSelect","eventKey"],"mappings":"8QAAaA,EAAW,2E,2jBCgBxB,IAAMC,EAAiBC,cAAH,KASdC,EAAkBD,cAAH,KAMfE,EAAcF,cAAH,KAMF,SAASG,EAAT,GAA8F,IAAtEC,EAAqE,EAArEA,cAAeC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,kBAC/EC,EAAUC,cAD0F,EAGtEC,MAA5BC,EAHkG,EAGlGA,WAAYC,EAHsF,EAGtFA,YAHsF,EAM5EC,mBAAS,IANmE,mBAMnGC,EANmG,KAM1FC,EAN0F,OASrDC,uBAAajB,EAAgB,CAChFkB,UAAW,CAAEH,WACbI,YAAa,WACNC,EAASC,WAILb,GACPA,EAAkBY,EAASE,UAJ3BC,GAAa,IAOjBC,YAAa,iBApB2F,mBASnGC,EATmG,YASlFC,KAAQN,GAT0E,aAS7D,GAT6D,GAS1EA,SAT0E,EAwBhEN,mBAAS,IAxBuD,mBAwBnGa,EAxBmG,KAwBpFC,EAxBoF,OA0BjEC,mBAAS3B,EAAiB,CACjEgB,UAAW,CAAEI,SAAUK,GACvBG,MAAOV,GAAYA,EAASC,YAAgC,KAAlBM,IAFpCD,KAAQK,GA1B0F,aA0BxE,GA1BwE,GA0B1FA,cA1B0F,EAgCxEjB,oBAAS,GAhC+D,mBAgCnGkB,EAhCmG,KAgCxFT,EAhCwF,OAkCvFU,sBAAY9B,EAAa,CAC1Ce,UAAW,CAAEI,SAAUK,EAAeZ,QAASA,GAC/CI,YAAa,WACXM,EAAc,CAAEP,UAAW,CAAEH,QAASA,KACtCQ,GAAa,MAJVW,EAlCmG,oBA0C1G,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,UAAU,YACVC,MAAO,CACLC,SAAU,WACVC,KAAmB,GAAb3B,EACN4B,IAAmB,GAAd3B,EACL4B,UAAW,wBACXC,OAAQ,KAEVC,KAAMX,EACNY,QAAS,kBAAMrB,GAAa,IAC5BsB,QAASd,EAAgB,SAAW,WAGlC,oCACE,kBAACI,EAAA,EAAMW,QAAP,KAAgBf,EAAgB,yBAA2B,sCAC3D,kBAACgB,EAAA,EAAD,CACEC,SAAU,SAACC,GACTA,EAAEC,iBACGnB,GACHG,KAGJiB,SAAU,SAACF,GAAD,OAAOrB,EAAiBqB,EAAEG,OAAOC,SAE3C,kBAACN,EAAA,EAAKO,QAAN,CAAcjB,MAAO,CAAEkB,UAAW,MAAQC,YAAY,sCAAsCC,WAAS,IACrG,kBAACC,EAAA,EAAD,CACErB,MAAO,CACLC,SAAU,WACViB,UAAW,MACXhB,KAAM,MACNE,UAAW,wBAEbkB,SAAU5B,EACV6B,QAAS,kBAAM1B,MARjB,qBAgBR,kBAAC2B,EAAA,EAAD,CAAQxB,MAAO,CAAEyB,OAAQ,IAAMC,OAAO,MAAMC,GAAG,YAAYnB,QAAQ,QACjE,kBAACgB,EAAA,EAAOI,MAAR,CAAcL,QAAS,kBAAMnD,EAAQyD,KAAK,OACxC,kBAACR,EAAA,EAAD,CAAQb,QAAQ,kBAAkBR,MAAO,CAAE8B,eAAgB,OAAQC,MAAO,IAAKN,OAAQ,IAAMO,KAAK,MAChG,yBAAKC,IAAI,OAAOC,IAAKC,EAAQ,KAAyBnC,MAAO,CAAEG,IAAK,EAAGsB,OAAQ,OAAQM,MAAO,YAGjG9D,EACD,kBAACuD,EAAA,EAAOY,SAAR,CACEpC,MAAO,CACLC,SAAU,WACVG,UAAW,sBACXF,KAAM,QAGPlC,GAEH,kBAACqE,EAAA,EAAD,CAAKtC,UAAU,WACb,yBACEC,MAAO,CACLsC,YAAa,GACbpB,UAAW,GACXqB,aAAc,KAGhB,kBAAC,IAAD,CAAcC,KAAK,+CAA+CC,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,4CAA/I,SAID7D,GAAYA,EAASC,WACpB,kBAAC6D,EAAA,EAAD,CAAgBC,MAAK,uBAAkB/D,EAASE,UAAYe,MAAO,CAAE+C,UAAW,WAC9E,kBAACC,EAAA,EAASC,KAAV,CAAejD,MAAO,CAAEkD,YAAa,EAAGC,aAAc,IACpD,kBAAC9B,EAAA,EAAD,CAAQrB,MAAO,CAAE+B,MAAO,QAAUR,QAAS,kBAAMnD,EAAQyD,KAAR,gBAAsB9C,EAASE,aAAhF,sBAIF,kBAAC+D,EAAA,EAASC,KAAV,CAAejD,MAAO,CAAEkD,YAAa,EAAGC,aAAc,IACpD,kBAAC,eAAD,CACEzF,SAAUA,EACV0F,gBAAiB,WACfzE,EAAW,IACXS,SAKNO,EACF,uBAAGK,MAAO,CAAEqD,SAAU,GAAInC,UAAW,KAArC,mBAEA,yBAAKlB,MAAO,CAAEyB,OAAQ,OAAQsB,UAAW,WACvC,kBAAC,IAAD,CACErF,SAAUA,EACV4F,UAAW,SAACC,GACV5E,EAAW4E,EAAS7E,SACpBU,IACIlB,GACFA,EAAiBqF,EAAS7E,UAG9B8E,UAAW,SAACD,KAEZE,YAAY,U,oBCvL5BC,EAAOC,QAAU,IAA0B,kC,2ICI5B,SAASC,EAAT,GAAgF,IAA1DC,EAAyD,EAAzDA,SAAUf,EAA+C,EAA/CA,MAAOgB,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,SAAUhE,EAAQ,EAARA,MAAQ,EAC9DvB,mBAAS,GADqD,mBACrFwF,EADqF,KAC5EC,EAD4E,OAEhEC,YAAU,CACpCC,UAAW,KAH+E,mBAErFC,EAFqF,KAE1EC,EAF0E,KAK5FC,qBAAU,WACJD,GACFJ,EAAW,KAEZ,CAACI,IATwF,MAY1DhG,MAA3BC,EAZqF,EAYrFA,WAAYC,EAZyE,EAYzEA,YACnB,OACE,kBAAC,IAAD,CAAMgG,IAAKH,EAAWtE,UAAU,YAAYC,MAAK,aAAG+B,MAAM,GAAD,OAAK,GAAMxD,GAAc0B,SAAU,WAAYC,KAAM,MAAOE,UAAW,uBAAwB6D,QAASA,EAASQ,WAAY,gBAAiBlC,aAAc,GAAIrB,UAAW,GAAIO,OAAQjD,EAAc,KAAQwB,GAAQ0E,OAAO,WACnR,oCACE,kBAAC,IAAKC,MAAN,CAAY3E,MAAO,CAACqD,SAAU,GAAIuB,UAAW,WAC1C9B,GAEH,kBAAC,IAAK+B,KAAN,CAAW7E,MAAO,CAACqD,SAAU,GAAIuB,UAAW,SAAUvE,OAAQ,KAASmC,KAAMwB,GAC1ED,GAEH,kBAAC,IAAKe,WAAN,KACGhB,GAEFD,M,iKC5BM,SAASkB,EAAT,GAA4C,IAAhBC,EAAe,EAAfA,KAAMhF,EAAS,EAATA,MAC/C,OACE,yBACEA,MAAK,aACHC,SAAU,WACVwB,OAAQ,GACRwC,QAAS,GACTlC,MAAO,OACPkD,QAAS,OACTC,WAAY,SACZC,gBAAiB,QACjBC,WAAY,SACZC,SAAU,SACVC,aAAc,YACXtF,IAGL,uBACEA,MAAO,CACL+B,MAAO,OACPqD,WAAY,UACZG,MAAO,QACPlC,SAAU,GACVmC,OAAQ,IAGTR,ICrBM,SAASS,EAAT,GAAwG,IAAhFC,EAA+E,EAA/EA,cAAeC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,aAAc/F,EAAS,EAATA,MAErG5B,EAAUC,cAFoG,EAIpFI,oBAAS,GAJ2E,mBAI7GuH,EAJ6G,KAInGC,EAJmG,OAOtFxH,mBAAS,GAP6E,mBAO7GwF,EAP6G,KAOpGC,EAPoG,KAgBpH,OARAK,qBAAU,WAAM,4CACd,WAAiC2B,GAAjC,SAAAC,EAAA,sEACQ,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASH,MADrD,OAEEhC,EAAW,GAFb,4CADc,uBAAC,SAAD,2BAKdqC,CAAkBR,KACjB,CAACA,IAGF,kBAACS,EAAA,EAAD,CACEC,GAAI,GACJzG,MAAK,aACHyE,WAAY,eACZR,QAASA,EACTuB,OAAQ,GACRkB,QAAS,EACTC,UAAW,MACXC,SAAU,MACVC,UAAW,QACR7G,GAEL8G,aAAc,kBAAMb,GAAY,IAChCc,aAAc,kBAAMd,GAAY,KAEhC,kBAAC5E,EAAA,EAAD,CACErB,MAAO,CAAE+B,MAAO,OAAQN,OAAQ,OAAQiF,QAAS,EAAGhC,OAAQ,GAC5DnD,QAAS,kBAAMnD,EAAQyD,KAAK6D,KAE5B,kBAACsB,EAAA,EAAD,CACEjH,UAAWiG,EAAW,YAAc,GACpChG,MAAO,CAAE2G,UAAW,MAAOlF,OAAQ,OAAQM,MAAO,OAAQ6E,SAAU,OAAQnC,WAAY,aACxFwC,SAAO,EACP/E,IAAKyD,IAEP,kBAACZ,EAAD,CAAkB/E,MAAO,CAAEG,IAAK,GAAK6E,KAAMc,IAC3C,kBAACf,EAAD,CACE/E,MAAO,CAAEG,IAAK,MAAOD,KAAM,MAAOE,UAAW,wBAAyB2B,MAAO,QAC7EiD,KAAMa,IAER,kBAACd,EAAD,CAAkB/E,MAAO,CAAEkH,OAAQ,GAAKlC,KAAMY,Q,+KChDvC,SAASuB,EAAT,GAAqF,IAA/CC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,YAS5EC,EAAgBH,EACnBI,QAAO,SAACC,GAAD,OAAkBA,EAAaC,eAAeL,iBAAmBA,KACxEM,KAAI,SAACF,EAAcG,GAAf,OAAyB,kBAAC,IAAD,iBAAkBH,EAAlB,CAAgCzH,MAAO,CAAEyB,OAAQ,IAAKmF,SAAU,KAAOb,aAA8B,KAAb6B,EAAQ,SAGhI,OAAKL,EAAcM,OAIjB,oCACE,kBAACC,EAAA,EAAD,CAAK9H,MAAO,CAAEkB,UAAW,UACvB,2BAAIoG,IAEN,yBAAKtH,MAAO,CAAEiF,QAAS,OAAQC,WAAY,SAAU6C,UAAW,WAAaR,IAPxE,K,s2BCXX,IAAMS,EAAYpK,cAAH,KAyCA,SAASqK,IAAW,IAc7BC,EAbIjJ,EAAakJ,cAAblJ,SADwB,EAEaO,mBAASwI,EAAW,CAC/DnJ,UAAW,CAAEI,cAHiB,IAExBI,KAAQN,GAFgB,aAEH,GAFG,GAEhBA,SAAiBqJ,EAFD,EAECA,QAFD,EAKM3J,mBAAS,cALf,mBAKzB4J,EALyB,KAKZC,EALY,KAOhC,GAAIF,EACF,OAAO,kBAAC,IAAD,CAASG,UAAQ,IAE1B,GAAIxJ,IAAaA,EAASC,WACxB,OAAO,iDAIT,GAAIoJ,EACFF,EAAc,kBAAC,IAAD,CAASK,UAAQ,QAC1B,CAEL,IAAMnB,EAAgC,eAAhBiB,EAClBtJ,EAASyJ,UAAUb,KAAI,SAAAc,GAAQ,OAAIA,EAAShB,gBAC5C1I,EAAS2J,iBAAiBf,KAAI,SAAAgB,GAAe,OAAIA,EAAgBlB,gBAErEmB,QAAQC,IAAIzB,GAEZc,EACE,oCACE,kBAACf,EAAD,CAA4BC,cAAiBA,EAAeC,eAAkB,QAASC,YAAe,UACtG,kBAACH,EAAD,CAA4BC,cAAiBA,EAAeC,eAAkB,YAAaC,YAAe,cAC1G,kBAACH,EAAD,CAA4BC,cAAiBA,EAAeC,eAAkB,YAAaC,YAAe,cAC1G,kBAACH,EAAD,CAA4BC,cAAiBA,EAAeC,eAAkB,eAAgBC,YAAe,kBAInH,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYtH,MAAS,CAAC0G,QAAS,MAAOjF,OAAQ,SAC5C,kBAACY,EAAA,EAAD,CACErC,MAAO,CAAEyB,OAAQ,MAAOK,eAAgB,SAASzB,OAAQ,KACzDG,QAAQ,QACRsI,UAAWT,EACXU,SAAU,SAACV,GAAD,OAAiBC,EAAeD,KAE1C,kBAAChG,EAAA,EAAIY,KAAL,KACE,kBAACZ,EAAA,EAAIwC,KAAL,CAAUmE,SAAS,cAAnB,iBAEF,kBAAC3G,EAAA,EAAIY,KAAL,KACE,kBAACZ,EAAA,EAAIwC,KAAL,CAAUmE,SAAS,qBAAnB,8BAGHd","file":"static/js/14.86b06ae3.chunk.js","sourcesContent":["export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query userdata($tokenId: String) {\n    userData(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId, setParentUserName }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { userData } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!userData.existsInDB) {\n        setShowAlert(true);\n      }\n      //if a userName listener was passed from a parent component then set the value once its available\n      else if (setParentUserName) {\n        setParentUserName(userData.userName);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !userData || userData.existsInDB || inputUsername === '',\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        onClose={() => setShowAlert(false)}\n        variant={userNameTaken ? 'danger' : 'primary'}\n      >\n        {\n          <>\n            <Alert.Heading>{userNameTaken ? 'This username is taken' : 'Create a username for your account'}</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (!userNameTaken) {\n                  postUser();\n                }\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt='Home' src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {userData && userData.existsInDB ? (\n            <DropdownButton title={`Signed in as ${userData.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${userData.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                onFailure={(response) => {\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React, {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport useWindowSize from '@rehooks/window-size';\nimport {useInView} from 'react-hook-inview'\nexport default function CustomCard ({children, title, imgOverlay, linkText, linkHref, style}) {\n  const [opacity, setOpacity] = useState(0)\n  const [inViewRef, inView] = useInView({\n    threshold: 0.5\n  })\n  useEffect(() => {\n    if (inView) {\n      setOpacity(1)\n    }\n  }, [inView])\n\n\n  const {innerWidth, innerHeight} = useWindowSize()\n  return (\n    <Card ref={inViewRef} className=\"shadow-lg\" style={{width: `${0.8 * innerWidth}`, position: 'relative', left: '50%', transform: 'translate(-50%, 0px)', opacity: opacity, transition: 'opacity 500ms', marginBottom: 20, marginTop: 20, height: innerHeight - 100, ...style}} border='primary' >\n      < >\n        <Card.Title style={{fontSize: 40, textAlign: 'center'}}>\n          {title}\n        </Card.Title>\n        <Card.Link style={{fontSize: 20, textAlign: 'center', zIndex: 1000, }} href={linkHref}>\n          {linkText}\n        </Card.Link>\n        <Card.ImgOverlay>\n          {imgOverlay}\n        </Card.ImgOverlay>\n        {children}\n      </>\n    </Card>\n  )\n}\n","import React from 'react';\nexport default function SearchResultText({ text, style }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 30,\n        opacity: 0.8,\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        ...style,\n      }}\n    >\n      <p\n        style={{\n          width: '100%',\n          whiteSpace: 'no-wrap',\n          color: 'black',\n          fontSize: 20,\n          margin: 0,\n        }}\n      >\n        {text}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport SearchResultText from 'components/navigation/search_result_text';\nexport default function SearchResult({ forwardingUrl, imgUrl, bottomText, centerText, topText, fadeInMillis, style }) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  const [hovering, setHovering] = useState(false);\n\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise((resolve) => setTimeout(resolve, millis));\n      setOpacity(1);\n    }\n    sleepBeforeAppear(fadeInMillis);\n  }, [fadeInMillis]);\n\n  return (\n    <Col\n      xs={12}\n      style={{\n        transition: 'opacity 0.5s',\n        opacity: opacity,\n        margin: 10,\n        padding: 0,\n        maxHeight: 347.5,\n        maxWidth: 347.5,\n        minHeight: '100%',\n        ...style,\n      }}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    >\n      <Button\n        style={{ width: '100%', height: '100%', padding: 0, border: 0,}}\n        onClick={() => history.push(forwardingUrl)}\n      >\n        <Image\n          className={hovering ? 'shadow-lg' : ''}\n          style={{ maxHeight: 347.5, height: '100%', width: 'auto', maxWidth: '100%', transition: 'all 200ms', }}\n          rounded\n          src={imgUrl}\n        />\n        <SearchResultText style={{ top: 0 }} text={topText} />\n        <SearchResultText\n          style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: 'auto' }}\n          text={centerText}\n        />\n        <SearchResultText style={{ bottom: 0 }} text={bottomText} />\n      </Button>\n    </Col>\n  );\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SearchResult from 'components/navigation/search_result';\n\nexport default function SearchResultHorizontalView({ searchResults, dateClassified, displayDate }) {\n  //we want to filter only the searchResults that match the dateClassified enum\n  //enum DateClassified{\n  //  TODAY\n  //  YESTERDAY\n  //  THIS_WEEK\n  //  FURTHER_BACK\n  //}\n\n  const mappedResults = searchResults\n    .filter((searchResult) => searchResult.dateClassifier.dateClassified === dateClassified)\n    .map((searchResult, index) => <SearchResult {...searchResult} style={{ height: 300, maxWidth: 300 }} fadeInMillis = {(index + 1) * 200} />);\n\n  //if no results don't even render for example 'This Week' with no elements\n  if (!mappedResults.length) {\n    return null;\n  }\n  return (\n    <>\n      <Row style={{ marginTop: '1.5em' }}>\n        <p>{displayDate}</p>\n      </Row>\n      <div style={{ display: 'flex', alignItems: 'center', overflowX: 'scroll' }}>{mappedResults}</div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport CustomNavbar from 'components/universal/custom_navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Loading from 'components/universal/loading';\nimport { useParams } from 'react-router-dom';\nimport SearchResultHorizontalView from 'components/navigation/search_result_horizontal_view'\nimport CustomCard from 'components/universal/custom_card';\n\nconst USER_DATA = gql`\n  query userdata($userName: String) {\n    userData(userName: $userName) {\n      userName\n      existsInDB\n      synchronizations {\n        geniusID\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n      gameStats {\n        creatorUserName\n        youtubeID\n        geniusID\n        wordsPerMinute\n        accuracy\n        createdAt\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function Profile() {\n  const { userName } = useParams();\n  const { data: { userData } = {}, loading } = useQuery(USER_DATA, {\n    variables: { userName },\n  });\n  const [selectedTab, setSelectedTab] = useState('/gameStats');\n\n  if (loading) {\n    return <Loading centered />;\n  }\n  if (userData && !userData.existsInDB) {\n    return <p>Couldn't find user</p>;\n  }\n\n  var cardContent;\n  if (loading) {\n    cardContent = <Loading centered />;\n  } else {\n    //select either the synchronizations or the gameStat search result representation\n    const searchResults = selectedTab === '/gameStats' \n      ? userData.gameStats.map(gameStat => gameStat.searchResult)\n      : userData.synchronizations.map(synchronization => synchronization.searchResult)\n\n    console.log(searchResults)\n    //render horizontal views which only map elements that belong in their classified date\n    cardContent = \n      < >\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'TODAY'} displayDate = {'Today'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'YESTERDAY'} displayDate = {'Yesterday'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'THIS_WEEK'} displayDate = {'This Week'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'FURTHER_BACK'} displayDate = {'Further Back'}/>\n      </>\n  }\n\n  return (\n    <>\n      <CustomNavbar />\n      <CustomCard style = {{padding: '1em', height: 'auto', }}>\n        <Nav\n          style={{ height: '10%', justifyContent: 'center',zIndex: 100 }}\n          variant='pills'\n          activeKey={selectedTab}\n          onSelect={(selectedTab) => setSelectedTab(selectedTab)}\n        >\n          <Nav.Item >\n            <Nav.Link eventKey='/gameStats'>Game History</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey='/synchronizations'>Created Synchronizations</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        {cardContent}\n      </CustomCard>\n    </>\n  );\n}\n"],"sourceRoot":""}