{"version":3,"sources":["components/lyrics/playing/synced_lyric.js","components/lyrics/playing/synced_lyric_mapper.js","components/lyrics/playing/game_entry.js","components/universal/custom_navbar.js","icons8-home.svg","components/video_player/video_player.js"],"names":["SyncedLyric","text","topOffset","time","id","commonSuffixLength","Container","style","position","transition","color","display","substring","SyncedLyricMapper","syncedLyrics","input","clearInput","videoDuration","useState","visibleLyrics","setVisibleLyrics","currentIndex","setCurrentIndex","height","setHeight","containerRef","useRef","useLayoutEffect","current","offsetHeight","useEffect","newVisibleLyrics","length","console","log","concat","map","syncedLyric","filter","indexOf","removeByID","ref","top","bottom","left","right","s","key","SYNCED_LYRIC_QUERY","gql","GameEntry","useParams","youtubeID","geniusID","useQuery","variables","data","error","history","useHistory","playerRef","setInput","setBuffering","setEnded","setVideoDuration","formRef","interval","setInterval","focus","getCurrentTime","clearInterval","Row","className","Button","onClick","push","undefined","Form","width","transform","fontSize","onChange","e","target","value","Control","visible","fadeOut","url","playing","justifyContent","CustomNavbar","centerContent","customContent","sticky","bg","variant","Brand","src","require","Collapse","href","data-icon","data-size","data-show-count","aria-label","module","exports","VideoPlayer","React","forwardRef","disableControls","opacity","setOpacity","opacityStyle","pointerEvents","controls","onBuffer","onBufferEnd","onPlay","onEnded"],"mappings":"yNAEe,SAASA,EAAT,GAAsE,IAAhDC,EAA+C,EAA/CA,KAAgBC,GAA+B,EAAzCC,KAAyC,EAAnCC,GAAmC,EAA/BF,WAAWG,EAAoB,EAApBA,mBAE9D,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,MAAO,CAACC,SAAU,WAAY,KAAO,GAAP,OAHZ,KAGY,KAAkC,UAAY,cAAZ,OAH9C,KAG8C,cAAmDN,EAAnD,OAAmEO,WAAW,gDACjJ,2BACE,0BAAMF,MAAO,CAACG,MAAO,QAASC,QAAS,iBACpCV,EAAKW,UAAU,EAAIP,GAA0C,IAEhE,0BAAME,MAAO,CAACG,MAAO,QAASC,QAAS,iBACpCV,EAAKW,UAAUP,GAA0C,OCTvD,SAASQ,EAAT,GAA8E,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAAgB,EAChDC,mBAAS,IADuC,mBACnFC,EADmF,KACpEC,EADoE,OAIlDF,mBAAS,GAJyC,mBAInFG,EAJmF,KAIrEC,EAJqE,OAM9DJ,mBAAS,GANqD,mBAMnFK,EANmF,KAM3EC,EAN2E,KAOpFC,EAAeC,mBACrBC,2BAAgB,WACVF,EAAaG,SACfJ,EAAUC,EAAaG,QAAQC,gBAEhC,IAEHC,qBAAU,WAER,IAAIC,EAAmBZ,EACnBL,GAAgBO,EAAeP,EAAakB,QAAUlB,EAAaO,GAAclB,KAAOc,IAE1FgB,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIpB,EAAaO,GAAclB,MACvC4B,EAAmBA,EAAiBI,OAAOrB,EAAaO,IACxDC,EAAgBD,EAAe,IAMjCU,GAJAA,EAAmBA,EAAiBK,KAAI,SAACC,GAEvC,OADAA,EAAYnC,WAAce,EAAgBoB,EAAYlC,MAAQ,EAAKoB,EAC5Dc,MAE2BC,QAAO,SAACD,GAE1C,OADAJ,QAAQC,IAAIG,GACLpB,EAAgBoB,EAAYlC,KAAO,KAE5CiB,EAAiBW,KAChB,CAACd,IAEJa,qBAAU,WACRV,EACED,EAAciB,KAAI,SAAAC,GAShB,OAPwC,IAApCA,EAAYpC,KAAKsC,QAAQxB,GAC3BsB,EAAYhC,mBAAqBU,EAAMiB,OAIvCK,EAAYhC,mBAAqB,EAE5BgC,KAGRC,QAAO,SAAAD,GACN,OAAIA,EAAYpC,OAASc,IAGzBC,KACO,SAGV,CAACD,IAGJ,IAAMyB,EAAa,SAACpC,GAClBgB,EAAiBkB,QAAO,SAAAD,GACtB,OAAOA,EAAYjC,KAAOA,MAK9B,OACE,yBAAKqC,IAAKhB,EAAclB,MAAO,CAACC,SAAU,WAAYkC,IAAK,EAAGC,OAAQ,MAAOC,KAAM,EAAGC,MAAO,IAC1F1B,IAAkB,GACf,KACAA,EAAciB,KAAI,SAAAU,GAAC,OAAI,kBAAC9C,EAAD,eAAa+C,IAAKD,EAAE1C,IAAS0C,EAA7B,CAAgC/B,MAAOA,EAAOyB,WAAYA,EAAYtC,UAAW4C,EAAE5C,UAAWG,mBAAoByC,EAAEzC,0B,qRC5DrJ,IAAM2C,EAAqBC,YAAH,KAST,SAASC,IAAa,IAAD,EACJC,cAAvBC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,SADgB,EAIZC,YAASN,EAAoB,CACjDO,UAAW,CAACH,UAAWA,EAAWC,SAAUA,KADvCG,EAJ2B,EAI3BA,KAAMC,EAJqB,EAIrBA,MAKPC,EAAUC,cAEVC,EAAYlC,mBAXgB,EAYRR,mBAAS,IAZD,mBAY3BH,EAZ2B,KAYpB8C,EAZoB,OAgBA3C,oBAAS,GAhBT,mBAgBhB4C,GAhBgB,aAiBR5C,oBAAS,GAjBD,mBAiBpB6C,GAjBoB,aAkBQ7C,oBAAS,GAlBjB,mBAkB3BD,EAlB2B,KAkBZ+C,EAlBY,OAmBJ9C,oBAAS,GAnBL,mBAqB5B+C,GArB4B,UAqBlBvC,oBAsBhB,OAnBAI,qBAAU,WACR,IAAMoC,EAAWC,aAAY,WACvBF,EAAQrC,SACVqC,EAAQrC,QAAQwC,QAEdR,EAAUhC,SACZoC,EAAiBJ,EAAUhC,QAAQyC,oBAEpC,IAQH,OAAO,kBAAMC,cAAcJ,MAC1B,IAEEd,GAAcC,GAInBpB,QAAQC,IAAIsB,GAEV,oCAEIC,EAEI,kBAACc,EAAA,EAAD,CAAKC,UAAU,6BACb,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,EAAQiB,KAAR,aAAmBvB,EAAnB,YAAgCC,MACrD,qFAKCuB,IAATpB,QAA4CoB,IAAtBpB,EAAK1C,aAEzB,oCACA,kBAACyD,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,CAAMtE,MAAO,CAACC,SAAU,WAAYmC,OAAQ,EAAGC,KAAM,MAAOkC,MAAO,IAAKC,UAAW,sBAAuBC,SAAU,KAAMC,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOC,SAC3J,kBAACP,EAAA,EAAKQ,QAAN,CAAc5C,IAAKwB,EAAS1D,MAAO,CAACyE,SAAU,QAGlD,kBAAC,IAAD,CAAavC,IAAKmB,EAAW0B,SAAS,EAAMC,SAAS,EAAMC,IAAG,0CAAqCpC,GAAaqC,SAAS,EAAM3B,aAAcA,EAAcC,SAAUA,IACrK,kBAAClD,EAAD,CAAmBE,MAAOA,EAAOD,aAAc0C,EAAOA,EAAK1C,aAAe,KAAMG,cAAeA,EAAeD,WAxDnG,WACjB6C,EAAS,QA0DD,oCACE,kBAACU,EAAA,EAAD,CAAKhE,MAAS,CAACmF,eAAe,WAC5B,8CAIF,kBAACnB,EAAA,EAAD,CAAKhE,MAAS,CAACmF,eAAe,WAC5B,kBAAC,IAAD,UAnCJ,0D,gCCnEZ,6FAOe,SAASC,EAAT,GAAuD,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,cAC7CnC,EAAUC,cAChB,OACE,kBAAC,IAAD,CAAQpD,MAAO,CAACgB,OAAQ,IAAKuE,OAAO,MAAMC,GAAG,YAAYC,QAAQ,QAC/D,kBAAC,IAAOC,MAAR,CAAcvB,QAAS,kBAAMhB,EAAQiB,KAAK,OACxC,kBAAC,IAAD,CAAQqB,QAAQ,SACd,yBAAKE,IAAKC,EAAQ,IAAoB5F,MAAO,CAACgB,OAAQ,GAAIuD,MAAO,QAGpEe,EACD,kBAAC,IAAOO,SAAR,CAAiB7F,MAAO,CAACC,SAAU,WAAYuE,UAAW,sBAAuBnC,KAAM,QACpFgD,GAEH,kBAAC,IAAD,CAAKpB,UAAU,WACb,kBAAC,IAAD,CAAc6B,KAAK,+CAA+CC,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,4CAA/I,Y,mBCrBRC,EAAOC,QAAU,IAA0B,yC,qFCErCC,EAAcC,IAAMC,YAAW,WAA4ErE,GAAS,IAAnF6C,EAAkF,EAAlFA,QAASC,EAAyE,EAAzEA,QAASC,EAAgE,EAAhEA,IAAKC,EAA2D,EAA3DA,QAAS3B,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,SAAUgD,EAA0B,EAA1BA,gBAA0B,EAEzF7F,mBAAS,GAFgF,mBAEhH8F,EAFgH,KAEvGC,EAFuG,KAKjHC,EACJ3B,EACI,CACA9E,WAAY,eACZuG,QAASA,GAGT1B,EACI,CAAC0B,QAAU,GACX,CAACA,QAAU,GAErB,OACE,kBAAC,IAAD,CACEvE,IAAKA,EACLlC,MAAK,aAAG4G,cAAe,QAAWD,GAClC1B,IAAKA,EACLC,QAASA,EACT2B,SAAYL,EACZM,SAAY,kBAAMvD,GAAa,IAC/BwD,YAAe,WACbxD,GAAa,GACbmD,EAAW,IAEbM,OAAQ,WACNN,EAAW,IAEbO,QAAS,WACPzD,GAAS,SAKF6C","file":"static/js/9.220a6cdc.chunk.js","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react'; \nimport Container from 'react-bootstrap/Container'\nexport default function SyncedLyric({text, time, id, topOffset, commonSuffixLength}){\n  const horizontalPosition = '50'\n  return (\n    <Container>\n      <div style={{position: 'absolute', 'left': `${horizontalPosition}%`, 'transform': `translate(-${horizontalPosition}%, ${topOffset}px)`, transition: `opacity .1s ease-in-out, top 2s ease-in-out`, }}>\n        <p>\n          <span style={{color: 'green', display: 'inline-block'}}>\n            {text.substring(0,  commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n          <span style={{color: 'black', display: 'inline-block'}}>\n            {text.substring(commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n        </p>\n      </div>\n    </Container>\n  )\n}\n","import React, {useState, useEffect, useRef, useLayoutEffect} from 'react';\nimport SyncedLyric from 'components/lyrics/playing/synced_lyric'\nimport Container from 'react-bootstrap/Container'\nexport default function SyncedLyricMapper({syncedLyrics, input, clearInput, videoDuration}) {\n  const [visibleLyrics, setVisibleLyrics] = useState([])\n\n  //used to check the next word as the lyrics are ordered by time by the database (no need to filter all for the next word)\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  const [height, setHeight] = useState(0)\n  const containerRef = useRef()\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      setHeight(containerRef.current.offsetHeight);\n    }\n  }, []);\n\n  useEffect(() => {\n    //check if the next word should appear yet\n    var newVisibleLyrics = visibleLyrics\n    if (syncedLyrics && currentIndex < syncedLyrics.length && syncedLyrics[currentIndex].time < videoDuration) {\n      //if the next word should appear, then listen to the next lyric, and append the current word to the visible ones\n      console.log(videoDuration)\n      console.log(syncedLyrics[currentIndex].time)\n      newVisibleLyrics = newVisibleLyrics.concat(syncedLyrics[currentIndex])\n      setCurrentIndex(currentIndex + 1)\n    }\n    newVisibleLyrics = newVisibleLyrics.map((syncedLyric) => {\n      syncedLyric.topOffset = ((videoDuration - syncedLyric.time) / 3) * height\n      return(syncedLyric)\n    })\n    newVisibleLyrics = newVisibleLyrics.filter((syncedLyric) => {\n      console.log(syncedLyric)\n      return(videoDuration - syncedLyric.time < 3)\n    }) \n    setVisibleLyrics(newVisibleLyrics)\n  }, [videoDuration])\n\n  useEffect(() => {\n    setVisibleLyrics(\n      visibleLyrics.map(syncedLyric => {\n        //matching suffix (0)\n        if (syncedLyric.text.indexOf(input) === 0) {\n          syncedLyric.commonSuffixLength = input.length\n        }\n        // indexof is not 0\n        else {\n          syncedLyric.commonSuffixLength = 0\n        }\n        return syncedLyric\n      })\n      //filter correct words and out of date ones\n      .filter(syncedLyric => {\n        if (syncedLyric.text !== input){\n          return false\n        }\n        clearInput()\n        return true\n      })\n    )\n  }, [input])\n\n  //used by synced lyrics to destroy themselves\n  const removeByID = (id) => {\n    setVisibleLyrics.filter(syncedLyric => {\n      return syncedLyric.id !== id\n    })\n  }\n\n\n  return (\n    <div ref={containerRef} style={{position: 'absolute', top: 0, bottom: '20%', left: 0, right: 0}}>\n      {visibleLyrics === []\n        ? null\n        : visibleLyrics.map(s => <SyncedLyric key={s.id}  {...s} input={input} removeByID={removeByID} topOffset={s.topOffset} commonSuffixLength={s.commonSuffixLength} />)\n      }\n    </div>\n  )\n};\n","import React, {useState, useRef, useEffect} from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport SyncedLyricMapper from 'components/lyrics/playing/synced_lyric_mapper'\nimport VideoPlayer from 'components/video_player/video_player'\nimport {useParams} from \"react-router-dom\";\nimport CustomNavBar from 'components/universal/custom_navbar'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks';\nimport Loading from 'components/universal/loading'\nimport {useHistory} from \"react-router-dom\";\n\nconst SYNCED_LYRIC_QUERY = gql`\nquery syncedlyrics($youtubeID: String, $geniusID: String){\n  syncedLyrics(youtubeID: $youtubeID, geniusID: $geniusID){\n    text\n    time\n    id\n  }\n}`\n\nexport default function GameEntry() {\n  const {youtubeID, geniusID} = useParams()\n\n\n  const {data, error} = useQuery(SYNCED_LYRIC_QUERY, {\n    variables: {youtubeID: youtubeID, geniusID: geniusID},\n  })\n\n\n  const history = useHistory()\n\n  const playerRef = useRef()\n  const [input, setInput] = useState('')\n  const clearInput = () => {\n    setInput('')\n  }\n  const [buffering, setBuffering] = useState(true)\n  const [ended, setEnded] = useState(false)\n  const [videoDuration, setVideoDuration] = useState(true)\n  const [focused, setFocused] = useState(false)\n\n  const formRef = useRef()\n\n  //create time listener, and form focuser\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (formRef.current) {\n        formRef.current.focus()\n      }\n      if (playerRef.current) {\n        setVideoDuration(playerRef.current.getCurrentTime())\n      }\n    }, 10);\n\n\n    //const sleepAndJump = async() => {\n    //  await new Promise(resolve => setTimeout(resolve, 1000));\n    //  playerRef.current.seekTo(55)\n    //}\n    //sleepAndJump()\n    return () => clearInterval(interval) \n  }, [])\n\n  if (!youtubeID || !geniusID) {\n    return ('Invalid URL: Missing either a youtubeID or a geniusID')\n  }\n\n  console.log(data)\n  return(\n    < >\n    {\n        error\n          ?\n            <Row className=\"justify-content-md-center\">\n              <Button onClick={() => history.push(`/s/${youtubeID}/${geniusID}`)}>\n                <p>Create synchronization for this song and video.</p>\n              </Button>\n            </Row>\n          :\n    \n        data !== undefined && data.syncedLyrics !== undefined\n          ? \n          < >\n          <Row>\n            <Form style={{position: 'absolute', bottom: 0, left: '50%', width: 800, transform: 'translate(-50%, 0%)', fontSize: 100}} onChange={(e) => setInput(e.target.value)}>\n              <Form.Control ref={formRef} style={{fontSize: 40}} />\n            </Form>\n          </Row>\n          <VideoPlayer ref={playerRef} visible={true} fadeOut={true} url={`https://www.youtube.com/watch?v=${youtubeID}`} playing={true} setBuffering={setBuffering} setEnded={setEnded} />\n          <SyncedLyricMapper input={input} syncedLyrics={data ? data.syncedLyrics : null} videoDuration={videoDuration} clearInput = {clearInput}/>\n          </>\n          : \n            < >\n              <Row style = {{justifyContent:'center'}}>\n                <p>\n                Loading lyrics\n              </p>\n              </Row>\n              <Row style = {{justifyContent:'center'}}>\n                <Loading/>\n              </Row>\n            </>\n    \n    }\n    </>\n      \n  )\n}\n\n  /*\n  return (\n    < >\n      <CustomNavBar />\n\n        error\n          ?\n      <Row className=\"justify-content-md-center\">\n        <Button onClick={() => history.push(`/s/${youtubeID}/${geniusID}`)}>\n          <p>Create synchronization for this song and video.</p>\n        </Button>\n      </Row>\n          :\n      \n        data !== undefined && data.syncedLyrics !== undefined\n          ?\n          < >\n          <Row>\n            <Form style={{position: 'absolute', bottom: 0, left: '50%', width: 800, transform: 'translate(-50%, 0%)', fontSize: 100}} onChange={(e) => setInput(e.target.value)}>\n              <Form.Control ref={formRef} style={{fontSize: 40}} />\n            </Form>\n          </Row>\n          <VideoPlayer ref={playerRef} visible={true} fadeOut={true} url={`https://www.youtube.com/watch?v=${youtubeID}`} playing={playing} setBuffering={setBuffering} setEnded={setEnded} />\n          <SyncedLyricMapper input={input} syncedLyrics={data.syncedLyrics} videoDuration={videoDuration} />\n          </>\n\n          :\n          <Row style={{justifyContent: 'center'}}>\n            <Loading />\n          </Row>\n      \n    </>\n  );\n} */ \n\n\n//        <CustomNavBar centerContent = {<p>\n//          {`${Math.floor(videoDuration / 60)}:${videoDuration % 60 >= 10 ? Math.floor(videoDuration) % 60 : \"0\" + Math.floor(videoDuration) % 60}`\n//}\n//  </p>\n//}/>\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from \"react-router-dom\";\nimport GitHubButton from 'react-github-btn'\nexport default function CustomNavbar({centerContent, customContent}) {\n  const history = useHistory()\n  return (\n    <Navbar style={{height: 60}} sticky='top' bg='secondary' variant='dark'>\n      <Navbar.Brand onClick={() => history.push('/')}>\n        <Button variant='light'>\n          <img src={require('icons8-home.svg')} style={{height: 30, width: 30}} />\n        </Button>\n      </Navbar.Brand>\n      {customContent}\n      <Navbar.Collapse style={{position: 'absolute', transform: 'translate(-50%, 0%)', left: '50%'}}>\n        {centerContent}\n      </Navbar.Collapse>\n      <Nav className='ml-auto'>\n        <GitHubButton href=\"https://github.com/EerikSaksi/type_to_lyrics\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star EerikSaksi/type_to_lyrics on GitHub\">Star</GitHubButton>\n      </Nav>\n    </Navbar >\n\n  )\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/icons8-home.5ecf30e7.svg\";","import React, {useState} from 'react';\nimport ReactPlayer from 'react-player';\nconst VideoPlayer = React.forwardRef(({visible, fadeOut, url, playing, setBuffering, setEnded, disableControls}, ref) => {\n  //used to fade the video out\n  const [opacity, setOpacity] = useState(0);\n\n  //add styling for fadeout depending on the supplied boolean\n  const opacityStyle =\n    fadeOut\n      ? {\n        transition: 'opacity 0.5s',\n        opacity: opacity\n      }\n      : \n        visible \n          ? {opacity : 1}\n          : {opacity : 0}\n     \n  return (\n    <ReactPlayer\n      ref={ref}\n      style={{pointerEvents: 'none', ...opacityStyle,}}\n      url={url}\n      playing={playing}\n      controls = {disableControls}\n      onBuffer = {() => setBuffering(true)}\n      onBufferEnd = {() => {\n        setBuffering(false)\n        setOpacity(0)\n      }}\n      onPlay={() => {\n        setOpacity(0)\n      }}\n      onEnded={() => {\n        setEnded(false)\n      }}\n    />\n  )\n})\nexport default VideoPlayer\n"],"sourceRoot":""}