{"version":3,"sources":["../node_modules/@rehooks/component-size/index.js","components/lyrics/playing/synced_lyric.js","components/lyrics/playing/synced_lyric_mapper.js","components/lyrics/playing/game_entry.js","components/universal/custom_navbar.js","media/home.png","components/video_player/video_player.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["React","require","useState","useCallback","useLayoutEffect","getSize","el","width","offsetWidth","height","offsetHeight","module","exports","ref","_useState","current","ComponentSize","setComponentSize","handleResize","ResizeObserver","resizeObserver","observe","disconnect","window","addEventListener","removeEventListener","SyncedLyric","text","topOffset","time","id","commonSuffixLength","horizontalOffsetPercentage","Container","style","position","transition","left","color","display","substring","SyncedLyricMapper","syncedLyrics","input","setInput","videoDuration","animateBackgroundColor","containerRef","useRef","useComponentSize","bucketIndex","setBucketIndex","visibleLyrics","setVisibleLyrics","useEffect","allDeployed","newVisibleLyrics","map","syncedLyric","indexOf","length","filter","newIndex","push","removeByID","top","bottom","right","s","key","SYNCED_LYRIC_QUERY","gql","SYNCHRONIZATION_DATA","GameEntry","useParams","youtubeID","geniusID","useQuery","variables","data","loading","synchronizationData","error","history","useHistory","backgroundColor","setBackgroundColor","a","Promise","resolve","setTimeout","playerRef","setBuffering","ended","setEnded","setVideoDuration","formRef","Row","className","Button","onClick","justifyContent","Form","transform","fontSize","onChange","e","target","value","Control","autoFocus","visible","url","playing","startTime","endTime","CustomNavbar","centerContent","customContent","sticky","bg","variant","Brand","size","src","Collapse","href","data-icon","data-size","data-show-count","aria-label","VideoPlayer","forwardRef","muted","disableControls","interval","setInterval","currentTime","getCurrentTime","clearInterval","seekTo","pointerEvents","opacity","controls","onBuffer","onBufferEnd","onEnded","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/9.a09683ff.chunk.js","sourcesContent":["'use strict'\nvar React = require('react')\nvar useState = React.useState\nvar useCallback = React.useCallback\nvar useLayoutEffect = React.useLayoutEffect\n\nfunction getSize(el) {\n  if (!el) {\n    return {\n      width: 0,\n      height: 0\n    }\n  }\n\n  return {\n    width: el.offsetWidth,\n    height: el.offsetHeight\n  }\n}\n\nfunction useComponentSize(ref) {\n  var _useState = useState(getSize(ref ? ref.current : {}))\n  var ComponentSize = _useState[0]\n  var setComponentSize = _useState[1]\n\n  var handleResize = useCallback(\n    function handleResize() {\n      if (ref.current) {\n        setComponentSize(getSize(ref.current))\n      }\n    },\n    [ref]\n  )\n\n  useLayoutEffect(\n    function() {\n      if (!ref.current) {\n        return\n      }\n\n      handleResize()\n\n      if (typeof ResizeObserver === 'function') {\n        var resizeObserver = new ResizeObserver(function() {\n          handleResize()\n        })\n        resizeObserver.observe(ref.current)\n\n        return function() {\n          resizeObserver.disconnect(ref.current)\n          resizeObserver = null\n        }\n      } else {\n        window.addEventListener('resize', handleResize)\n\n        return function() {\n          window.removeEventListener('resize', handleResize)\n        }\n      }\n    },\n    [ref.current]\n  )\n\n  return ComponentSize\n}\n\nmodule.exports = useComponentSize\n","import React, {useEffect, useLayoutEffect, useState} from 'react'; \nimport Container from 'react-bootstrap/Container'\nexport default function SyncedLyric({text, time, id, topOffset, commonSuffixLength, horizontalOffsetPercentage}){\n  return (\n    <Container>\n      <div style={{width: 'auto', position: 'absolute', 'transform': `translate(100%, ${topOffset}px)`, transition: `opacity .1s ease-in-out, top 2s ease-in-out`, left: `${horizontalOffsetPercentage}%`}}>\n        <p>\n          <span style={{color: 'green', display: 'inline-block'}}>\n            {text.substring(0,  commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n          <span style={{color: 'black', display: 'inline-block'}}>\n            {text.substring(commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n        </p>\n      </div>\n    </Container>\n  )\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport SyncedLyric from 'components/lyrics/playing/synced_lyric'\nimport useComponentSize from '@rehooks/component-size'\n\nconst fallingTime = 3\nexport default function SyncedLyricMapper({syncedLyrics, input, setInput, videoDuration, animateBackgroundColor}) {\n\n  const containerRef = useRef()\n  const {height} = useComponentSize(containerRef)\n\n  const [bucketIndex, setBucketIndex] = useState(0)\n  const [visibleLyrics, setVisibleLyrics] = useState(syncedLyrics[0])\n\n  //this simply shifts currently visible lyrics downwards and filters lryics that are out of time\n  useEffect(() => {\n\n    //whether or not the top offset of all current lyrics is positive \n    var allDeployed = true\n    const newVisibleLyrics = visibleLyrics.map((syncedLyric) => {\n      //calculate how far far \n      var topOffset = (videoDuration - syncedLyric.time) / fallingTime * height\n      if (topOffset <= 0) {\n        topOffset = 0\n        allDeployed = false\n      }\n      syncedLyric.topOffset = topOffset\n\n      //matching suffix (0)\n      if (topOffset && syncedLyric.text.indexOf(input) === 0) {\n        syncedLyric.commonSuffixLength = input.length\n      }\n      // indexof is not 0\n      else {\n        syncedLyric.commonSuffixLength = 0\n      }\n      return (syncedLyric)\n    })\n      //filter correct words and out of date ones\n      .filter(syncedLyric => {\n        if (videoDuration - syncedLyric.time > fallingTime) {\n          animateBackgroundColor('red')\n          return false\n        }\n        else if (syncedLyric.topOffset && syncedLyric.text + ' ' === input) {\n          setInput('')\n          animateBackgroundColor('green')\n          return false\n        }\n        else {\n          return true\n        }\n      })\n    //if all the current visible lyrics have top offset greater than 0 then add the next index of lyrics in\n    if (allDeployed) {\n      const newIndex = bucketIndex + 1\n      if (newIndex < syncedLyrics.length) {\n        setBucketIndex(newIndex)\n        newVisibleLyrics.push(...syncedLyrics[newIndex])\n      }\n    }\n    setVisibleLyrics(newVisibleLyrics)\n  }, [videoDuration])\n\n\n  //used by synced lyrics to destroy themselves\n  const removeByID = (id) => {\n    setVisibleLyrics.filter(syncedLyric => {\n      return syncedLyric.id !== id\n    })\n  }\n\n  return (\n    <div ref={containerRef} style={{position: 'absolute', top: 60, bottom: '20%', left: 0, right: 0}}>\n      {visibleLyrics === []\n        ? null\n        : visibleLyrics.map(s => <SyncedLyric key={s.id}  {...s} input={input} removeByID={removeByID} topOffset={s.topOffset} commonSuffixLength={s.commonSuffixLength} />)\n      }\n    </div>\n  )\n};\n","import React, {useState, useRef, useEffect} from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport SyncedLyricMapper from 'components/lyrics/playing/synced_lyric_mapper'\nimport VideoPlayer from 'components/video_player/video_player'\nimport {useParams} from \"react-router-dom\";\nimport CustomNavBar from 'components/universal/custom_navbar'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks';\nimport Loading from 'components/universal/loading'\nimport {useHistory} from \"react-router-dom\";\n\nconst SYNCED_LYRIC_QUERY = gql`\nquery syncedlyrics($youtubeID: String, $geniusID: String){\n  syncedLyrics(youtubeID: $youtubeID, geniusID: $geniusID){\n    text\n    time\n    id\n    horizontalOffsetPercentage\n  }\n}`\nconst SYNCHRONIZATION_DATA = gql`\nquery synchronizationdata($youtubeID: String, $geniusID: String){\n  synchronizationData(youtubeID: $youtubeID, geniusID: $geniusID){\n    startTime\n    endTime\n  }\n}`\n\nexport default function GameEntry() {\n  const {youtubeID, geniusID} = useParams()\n  const {data: {syncedLyrics} = {}, loading} = useQuery(SYNCED_LYRIC_QUERY, {\n    variables: {youtubeID, geniusID}\n  })\n  const {data: {synchronizationData} = {}, error} = useQuery(SYNCHRONIZATION_DATA, {\n    variables: {youtubeID, geniusID}\n  })\n  const history = useHistory()\n\n  const [input, setInput] = useState('')\n\n  const [backgroundColor, setBackgroundColor] = useState('white')\n  const animateBackgroundColor = async (color) => {\n    setBackgroundColor(color)\n    await new Promise(resolve => setTimeout(resolve, 100))\n    setBackgroundColor('white')\n  }\n\n\n  const playerRef = useRef()\n  const [buffering, setBuffering] = useState(true)\n  const [ended, setEnded] = useState(false)\n  const [videoDuration, setVideoDuration] = useState(true)\n\n  const formRef = useRef()\n  if (!youtubeID || !geniusID) {\n    return ('Invalid URL: Missing either a youtubeID or a geniusID')\n  }\n  if (ended) {\n    return (<p>wowa</p>)\n  }\n  return (\n    < >\n      <CustomNavBar />\n      {\n        error\n          ?\n          <Row className=\"justify-content-md-center\">\n            <Button onClick={() => history.push(`/s/${youtubeID}/${geniusID}`)}>\n              <p>Create synchronization for this song and video.</p>\n            </Button>\n          </Row>\n          :\n\n          !loading\n            ?\n            <div style={{position: 'absolute', top: 0, bottom: 0, right: 0, left: 0, backgroundColor: backgroundColor, transition: 'background-color 200ms'}}>\n              <Row>\n                <Form style={{position: 'absolute', bottom: 0, left: '50%', width: 800, transform: 'translate(-50%, 0%)', fontSize: 100}} onChange={(e) => setInput(e.target.value)}>\n                  <Form.Control value={input} className=\"shadow-lg\" ref={formRef} style={{fontSize: 40}} autoFocus />\n                </Form>\n              </Row>\n              <VideoPlayer ref={playerRef} visible={false} url={`https://www.youtube.com/watch?v=${youtubeID}`} playing={true} setBuffering={setBuffering} setEnded={setEnded} setVideoDuration={setVideoDuration} startTime={synchronizationData ? synchronizationData[0].startTime : null} endTime={synchronizationData ? synchronizationData[0].endTime : null}\n\n              />\n              <SyncedLyricMapper input={input} setInput={setInput} syncedLyrics={loading ? [] : syncedLyrics} videoDuration={videoDuration} animateBackgroundColor={animateBackgroundColor} />\n            </div>\n            :\n            < >\n              <Row style={{justifyContent: 'center'}}>\n                <p>\n                  Loading lyrics\n              </p>\n              </Row>\n              <Row style={{justifyContent: 'center'}}>\n                <Loading />\n              </Row>\n            </>\n\n      }\n    </>\n\n  )\n}\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from \"react-router-dom\";\nimport GitHubButton from 'react-github-btn'\n\nexport default function CustomNavbar({centerContent, customContent}) {\n\n  const history = useHistory()\n  return (\n    <Navbar style={{height: 60}} sticky='top' bg='secondary' variant='dark'>\n      <Navbar.Brand onClick={() => history.push('/')}>\n        <Button variant='outline-primary' style = {{justifyContent: 'left', width: 142, height: 44}} size = 'sm'>\n          <img src={require('../../media/home.png')} style={{top: 0, height: '100%', width: '100%'}} />\n        </Button>\n      </Navbar.Brand>\n      {customContent}\n      <Navbar.Collapse style={{position: 'absolute', transform: 'translate(-50%, 0%)', left: '50%'}}>\n        {centerContent}\n      </Navbar.Collapse>\n      <Nav className='ml-auto'>\n        <GitHubButton href=\"https://github.com/EerikSaksi/type_to_lyrics\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star EerikSaksi/type_to_lyrics on GitHub\">Star</GitHubButton>\n      </Nav>\n    </Navbar >\n\n  )\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React, {useState, useEffect} from 'react';\nimport ReactPlayer from 'react-player';\nconst VideoPlayer = React.forwardRef(({visible, muted, url, playing, setBuffering, setEnded, setVideoDuration, disableControls, style, startTime, endTime}, ref) => {\n  //create interval that sets time and if endTime is passed, listens to the end\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (setVideoDuration && ref.current) {\n        const currentTime = ref.current.getCurrentTime()\n        setVideoDuration(currentTime)\n        if (endTime && currentTime > endTime) {\n          setEnded(true)\n        }\n      }\n    }, 10);\n    return () => clearInterval(interval)\n  }, [endTime])\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.seekTo(startTime)\n    }\n  }, [ref.current, startTime])\n\n  return (\n    <ReactPlayer\n      ref={ref}\n      style={{pointerEvents: disableControls ? 'none' : 'auto', opacity: visible ? 1 : 0, ...style, }}\n      url={url}\n      playing={playing}\n      muted={muted}\n      controls={disableControls}\n      onBuffer={() => {\n        if (setBuffering) {\n          setBuffering(true)\n        }\n      }}\n      onBufferEnd={() => {\n        if (setBuffering) {\n          setBuffering(false)\n        }\n      }}\n      onEnded={() => {\n        if (setEnded) {\n          setEnded(true)\n        }\n      }}\n    />\n  )\n})\nexport default VideoPlayer\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}