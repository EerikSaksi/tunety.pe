{"version":3,"sources":["components/universal/google_login_secrets.js","components/universal/custom_navbar.js","media/home.png","components/navigation/search_result_text.js","components/navigation/search_result.js","components/universal/custom_card.js","components/navigation/search_result_horizontal_view.js","components/navigation/profile.js"],"names":["clientId","SIGNED_IN_USER","gql","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","setParentUserName","history","useHistory","useWindowSize","innerWidth","innerHeight","useState","tokenId","setTokenId","onSuccessCalled","setOnSuccessCalled","useLazyQuery","variables","onCompleted","userData","existsInDB","userName","setShowAlert","fetchPolicy","fetchUserInfo","data","inputUsername","setInputUsername","useQuery","skip","userNameTaken","showAlert","useMutation","postUser","Alert","className","style","position","left","top","transform","zIndex","show","dismissible","onClose","variant","Heading","Form","onSubmit","e","preventDefault","onChange","target","value","Control","marginTop","placeholder","autoFocus","Button","disabled","onClick","Navbar","height","sticky","bg","Brand","push","justifyContent","width","size","alt","src","require","Collapse","Nav","marginRight","marginBottom","href","data-icon","data-size","data-show-count","aria-label","DropdownButton","title","alignSelf","Dropdown","Item","paddingLeft","paddingRight","onLogoutSuccess","fontSize","onSuccess","response","console","log","onFailure","JSON","stringify","isSignedIn","module","exports","SearchResultText","text","opacity","display","alignItems","backgroundColor","whiteSpace","overflow","textOverflow","color","margin","SearchResult","forwardingUrl","imgUrl","bottomText","centerText","topText","fadeInMillis","hovering","setHovering","setOpacity","useEffect","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","Col","xs","transition","padding","maxHeight","maxWidth","minHeight","onMouseEnter","onMouseLeave","border","Image","rounded","bottom","CustomCard","children","imgOverlay","linkText","linkHref","useInView","threshold","inViewRef","inView","ref","Title","textAlign","Link","ImgOverlay","SearchResultHorizontalView","searchResults","dateClassified","displayDate","mappedResults","filter","searchResult","dateClassifier","map","index","length","Row","overflowX","USER_DATA","Profile","cardContent","useParams","loading","selectedTab","setSelectedTab","centered","gameStats","gameStat","synchronizations","synchronization","activeKey","onSelect","eventKey"],"mappings":"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","file":"static/js/14.a5edbfaa.chunk.js","sourcesContent":["export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query userdata($tokenId: String) {\n    userData(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId, setParentUserName }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n  const [onSuccessCalled, setOnSuccessCalled] = useState('not called')\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { userData } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!userData.existsInDB) {\n        setShowAlert(true);\n      }\n      //if a userName listener was passed from a parent component then set the value once its available\n      else if (setParentUserName) {\n        setParentUserName(userData.userName);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !userData || userData.existsInDB || inputUsername === '',\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        dismissible={true}\n        onClose={() => setShowAlert(false)}\n        variant={userNameTaken ? 'danger' : 'primary'}\n      >\n        {\n          <>\n            <Alert.Heading>{userNameTaken ? 'This username is taken' : 'Create a username for your account'}</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (!userNameTaken) {\n                  postUser();\n                }\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt='Home' src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent, \n            <p> {`${onSuccessCalled}`} </p>\n          }\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {userData && userData.existsInDB ? (\n            <DropdownButton title={`Signed in as ${userData.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${userData.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  console.log('called')\n                  setOnSuccessCalled('onSucessCalled')\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                onFailure={(response) => {\n\n                  setOnSuccessCalled(JSON.stringify(response))\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React from 'react';\nexport default function SearchResultText({ text, style }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 30,\n        opacity: 0.8,\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        ...style,\n      }}\n    >\n      <p\n        style={{\n          width: '100%',\n          whiteSpace: 'no-wrap',\n          color: 'black',\n          fontSize: 20,\n          margin: 0,\n        }}\n      >\n        {text}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport SearchResultText from 'components/navigation/search_result_text';\nexport default function SearchResult({ forwardingUrl, imgUrl, bottomText, centerText, topText, fadeInMillis, style }) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  const [hovering, setHovering] = useState(false);\n\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise((resolve) => setTimeout(resolve, millis));\n      setOpacity(1);\n    }\n    sleepBeforeAppear(fadeInMillis);\n  }, [fadeInMillis]);\n\n  return (\n    <Col\n      xs={12}\n      style={{\n        transition: 'opacity 0.5s',\n        opacity: opacity,\n        margin: 10,\n        padding: 0,\n        maxHeight: 347.5,\n        maxWidth: 347.5,\n        minHeight: '100%',\n        ...style,\n      }}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    >\n      <Button\n        style={{ width: '100%', height: '100%', padding: 0, border: 0,}}\n        onClick={() => history.push(forwardingUrl)}\n      >\n        <Image\n          className={hovering ? 'shadow-lg' : ''}\n          style={{ maxHeight: 347.5, height: '100%', width: 'auto', maxWidth: '100%', transition: 'all 200ms', }}\n          rounded\n          src={imgUrl}\n        />\n        <SearchResultText style={{ top: 0 }} text={topText} />\n        <SearchResultText\n          style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: 'auto' }}\n          text={centerText}\n        />\n        <SearchResultText style={{ bottom: 0 }} text={bottomText} />\n      </Button>\n    </Col>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport useWindowSize from '@rehooks/window-size';\nimport {useInView} from 'react-hook-inview'\nexport default function CustomCard ({children, title, imgOverlay, linkText, linkHref, style}) {\n  const [opacity, setOpacity] = useState(0)\n  const [inViewRef, inView] = useInView({\n    threshold: 0.5\n  })\n  useEffect(() => {\n    if (inView) {\n      setOpacity(1)\n    }\n  }, [inView])\n\n\n  const {innerWidth, innerHeight} = useWindowSize()\n  return (\n    <Card ref={inViewRef} className=\"shadow-lg\" style={{width: `${0.8 * innerWidth}`, position: 'relative', left: '50%', transform: 'translate(-50%, 0px)', opacity: opacity, transition: 'opacity 500ms', marginBottom: 20, marginTop: 20, height: innerHeight - 100, ...style}} border='primary' >\n      < >\n        <Card.Title style={{fontSize: 40, textAlign: 'center'}}>\n          {title}\n        </Card.Title>\n        <Card.Link style={{fontSize: 20, textAlign: 'center', zIndex: 1000, }} href={linkHref}>\n          {linkText}\n        </Card.Link>\n        <Card.ImgOverlay>\n          {imgOverlay}\n        </Card.ImgOverlay>\n        {children}\n      </>\n    </Card>\n  )\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SearchResult from 'components/navigation/search_result';\n\nexport default function SearchResultHorizontalView({ searchResults, dateClassified, displayDate }) {\n  //we want to filter only the searchResults that match the dateClassified enum\n  //enum DateClassified{\n  //  TODAY\n  //  YESTERDAY\n  //  THIS_WEEK\n  //  FURTHER_BACK\n  //}\n\n  const mappedResults = searchResults\n    .filter((searchResult) => searchResult.dateClassifier.dateClassified === dateClassified)\n    .map((searchResult, index) => <SearchResult {...searchResult} style={{ height: 300, maxWidth: 300 }} fadeInMillis = {(index + 1) * 200} />);\n\n  //if no results don't even render for example 'This Week' with no elements\n  if (!mappedResults.length) {\n    return null;\n  }\n  return (\n    <>\n      <Row style={{ marginTop: '1.5em' }}>\n        <p>{displayDate}</p>\n      </Row>\n      <div style={{ display: 'flex', alignItems: 'center', overflowX: 'scroll' }}>{mappedResults}</div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport CustomNavbar from 'components/universal/custom_navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Loading from 'components/universal/loading';\nimport { useParams } from 'react-router-dom';\nimport SearchResultHorizontalView from 'components/navigation/search_result_horizontal_view'\nimport CustomCard from 'components/universal/custom_card';\n\nconst USER_DATA = gql`\n  query userdata($userName: String) {\n    userData(userName: $userName) {\n      userName\n      existsInDB\n      synchronizations {\n        geniusID\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n      gameStats {\n        creatorUserName\n        youtubeID\n        geniusID\n        wordsPerMinute\n        accuracy\n        createdAt\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function Profile() {\n  const { userName } = useParams();\n  const { data: { userData } = {}, loading } = useQuery(USER_DATA, {\n    variables: { userName },\n  });\n  const [selectedTab, setSelectedTab] = useState('/gameStats');\n\n  if (loading) {\n    return <Loading centered />;\n  }\n  if (userData && !userData.existsInDB) {\n    return <p>Couldn't find user</p>;\n  }\n\n  var cardContent;\n  if (loading) {\n    cardContent = <Loading centered />;\n  } else {\n    //select either the synchronizations or the gameStat search result representation\n    const searchResults = selectedTab === '/gameStats' \n      ? userData.gameStats.map(gameStat => gameStat.searchResult)\n      : userData.synchronizations.map(synchronization => synchronization.searchResult)\n\n    console.log(searchResults)\n    //render horizontal views which only map elements that belong in their classified date\n    cardContent = \n      < >\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'TODAY'} displayDate = {'Today'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'YESTERDAY'} displayDate = {'Yesterday'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'THIS_WEEK'} displayDate = {'This Week'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'FURTHER_BACK'} displayDate = {'Further Back'}/>\n      </>\n  }\n\n  return (\n    <>\n      <CustomNavbar />\n      <CustomCard style = {{padding: '1em', height: 'auto', }}>\n        <Nav\n          style={{ height: '10%', justifyContent: 'center',zIndex: 100 }}\n          variant='pills'\n          activeKey={selectedTab}\n          onSelect={(selectedTab) => setSelectedTab(selectedTab)}\n        >\n          <Nav.Item >\n            <Nav.Link eventKey='/gameStats'>Game History</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey='/synchronizations'>Created Synchronizations</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        {cardContent}\n      </CustomCard>\n    </>\n  );\n}\n"],"sourceRoot":""}