{"version":3,"sources":["media/fast-forward.png","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Alert.js","components/lyrics/preview/preview_lyric.js","components/lyrics/preview/lyrics_timeline.js","components/lyrics/preview/preview.js","components/video_player/use_duration.js","components/lyrics/syncing/lyrics_sync_creator.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"names":["module","exports","_fadeStyles","fadeStyles","ENTERING","ENTERED","Fade","React","forwardRef","_ref","ref","className","children","props","_objectWithoutPropertiesLoose","handleEnter","useCallback","node","triggerBrowserReflow","onEnter","createElement","Transition","_extends","addEndListener","transitionEnd","status","innerProps","cloneElement","classNames","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","propTypes","label","PropTypes","string","isRequired","onClick","func","CloseButton","type","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","SafeAnchor","show","transition","closeLabel","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","bsPrefix","variant","onClose","dismissible","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","alert","role","undefined","Link","Heading","PreviewLyric","id","text","time","timePixelOffset","changeLyricById","videoDuration","width","playing","setPlaying","useState","setDisplayTime","buttonVariant","setButtonVariant","transitionTime","setTransitionTime","useEffect","Math","floor","a","Promise","resolve","setTimeout","sleepAndUpdate","clientPixelOffset","setClientPixelOffset","dragging","setDragging","handleStopDragging","pixelOffset","deltaTime","wasPlaying","axis","onStart","onStop","onDrag","event","movementX","clientX","screenX","Button","key","style","position","alignSelf","transform","justifyContent","fontSize","LyricsTimeLine","syncedLyrics","aboveProgressBar","Array","mappedLyrics","setMappedLyrics","setWidth","containerRef","useRef","useLayoutEffect","current","offsetWidth","tempMappedLyrics","i","length","forEach","line","syncedLyric","diff","push","Container","fluid","height","map","row","index","Row","marginTop","timelineRatio","POST_SYNCED_LYRICS","gql","startTime","endTime","useParams","youtubeID","geniusID","playerRef","skipForwardsRef","skipBackwardsRef","history","useHistory","mutableSyncedLyrics","setMutableSyncedLyrics","useMutation","variables","synchronizationData","onCompleted","setLyricsPosted","postSyncedLyrics","setVideoDuration","displayVideoDuration","setDisplayVideoDuration","minutes","seconds","toString","amount","useDuration","getIncrementedVideoDuration","lyricChangeNotification","setLyricChangeNotification","showAlert","setShowAlert","lyricsPosted","newTime","formatTime","toFixed","seekTo","buffering","setBuffering","document","addEventListener","detectKey","interval","setInterval","currentTime","getCurrentTime","clearInterval","window","removeEventListener","code","incrementVideoDuration","jumpTime","paddingLeft","paddingRight","centerContent","Navbar","Collapse","disabled","color","textAlign","Image","src","pauseIcon","playIcon","Text","marginLeft","customContent","href","title","visible","url","disableControls","top","left","right","bottom","borderLeft","zIndex","Col","xs","block","blur","require","backgroundColor","maxWidth","fixed","bg","PROCESSED_LYRICS","LyricsSyncCreator","console","log","ended","setEnded","currentRow","setCurrentRow","currentCol","setCurrentCol","keyCode","setKeyPresses","keyPresses","setSyncedLyrics","instructions","setInstructions","data","useQuery","processedLyrics","word","__typename","rowIndex","colIndex","fadeOut","slice","minWidth","marginBottom","centered","DEVICE_SIZES","_ref$as","as","spans","classes","brkPoint","span","offset","order","propValue","_propValue$span","infix","apply","concat","p"],"mappings":"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","file":"static/js/10.bda607b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fast-forward.04baf9a2.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport React, { useCallback } from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\nvar Fade = React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\"]);\n\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n    if (props.onEnter) props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    ref: ref,\n    addEndListener: transitionEnd\n  }, props, {\n    onEnter: handleEnter\n  }), function (status, innerProps) {\n    return React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    }));\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"onClick\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport SafeAnchor from './SafeAnchor';\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nvar AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nvar AlertLink = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  var Transition = transition === true ? Fade : transition;\n  var alert = /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    ref: ref,\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    unmountOnExit: true\n  }, props, {\n    ref: undefined,\n    in: show\n  }), alert);\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = AlertLink;\nAlert.Heading = AlertHeading;\nexport default Alert;","import React, {useEffect, useLayoutEffect, useState, useRef} from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport {DraggableCore} from 'react-draggable'\n\nexport default function PreviewLyric({id, text, time, timePixelOffset, changeLyricById, videoDuration, width, playing, setPlaying}) {\n  //the overlay display string, formatted whenever time changes\n  const [displayTime, setDisplayTime] = useState('')\n\n  const [buttonVariant, setButtonVariant] = useState('primary')\n  const [transitionTime, setTransitionTime] = useState(130)\n  useEffect(() => {\n    setDisplayTime(`${Math.floor(time / 60)}:${time % 60 >= 9 ? Math.floor(time) % 60 : \"0\" + Math.floor(time) % 60}`)\n    //videoDuration is updated every 500 seconds. if the videoDuration would match the time before the next time update, sleep the difference and at the end of it indicate that this is the current time\n    if (time - videoDuration <= 0.5 && time - videoDuration  > 0) {\n      const sleepAndUpdate = async () => {\n        await new Promise(resolve => setTimeout(resolve, (time - videoDuration) * 1000));\n        setButtonVariant('warning')\n        await new Promise(resolve => setTimeout(resolve, 500));\n        setButtonVariant('primary')\n      }\n      sleepAndUpdate()\n    }\n  }, [videoDuration])\n\n  //this is the pixel offset that the client sees. This is because sometimes we want to use the offset based on the time of this lyric, and other times the offset of the element being currently dragged\n  const [clientPixelOffset, setClientPixelOffset] = useState(timePixelOffset)\n\n  const [buttonDimensions, setButtonDimensions] = useState({})\n\n\n\n\n  //whether or not we are dragging an element, used to remove margin transitions and to temporarily stop an element from moving around\n  const [dragging, setDragging] = useState(false)\n\n\n  const handleStopDragging = async (pixelOffset) => {\n\n    var deltaTime = pixelOffset / width\n\n    //normalize 0 to 1 ratio between -5 and 5\n    deltaTime = (deltaTime - 0.5) * 10\n    setTransitionTime(1000)\n    const wasPlaying = playing \n    setPlaying(false)\n    changeLyricById(id, videoDuration + deltaTime)\n    setDragging(false)\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    if (wasPlaying){\n      setPlaying(true)\n    }\n    setTransitionTime(130)\n  }\n\n  //when the video is playing, the time pixel offset changes which messes with the element we are dragging\n  useEffect(() => {\n    if (!dragging) {\n      setClientPixelOffset(timePixelOffset)\n    }\n  }, [timePixelOffset])\n\n  return (\n    <>\n      <DraggableCore axis={'x'} onStart={() => setDragging(true)} onStop={() => handleStopDragging(clientPixelOffset)} onDrag={(event) => {\n          const {movementX, clientX, screenX} = event\n          setClientPixelOffset(clientPixelOffset => (movementX) * (clientX / screenX)  + clientPixelOffset)\n          setTransitionTime(0)\n        }\n      }>\n        <Button key={id}  variant={buttonVariant} style={{transition: `transform linear ${transitionTime}ms`, position: 'absolute', alignSelf: 'center', transform: `translate(${clientPixelOffset}px, 0px)`, justifyContent: 'start'}}>\n          <p style={{fontSize: '30px'}}>{text}</p>\n        </Button>\n      </DraggableCore>\n    </>\n  )\n}\n\n      //<div style={aboveProgressBar ? {bottom: buttonDimensions.top} : {top: buttonDimensions.bottom}, {transition: `all ease-in-out ${buttonDimensions.width ? 400 : 0}ms`, position: 'absolute', alignSelf: 'center', transform: `translate(${clientPixelOffset + buttonDimensions.width / 2}px, 0px)`, width: 1, backgroundColor: 'black', justifyContent: 'center'}}></div>\n","import React, {useEffect, useState, useRef, useLayoutEffect} from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport PreviewLyric from 'components/lyrics/preview/preview_lyric'\nexport default function LyricsTimeLine({videoDuration, syncedLyrics, changeLyricById, aboveProgressBar, playing, setPlaying}) {\n  const [mappedLyrics, setMappedLyrics] = useState(Array(3))\n\n  //this code is used to get the width of the container once it has rendered. this is because we need to convert the pixel value after a word has been moved to a ratio. for example, if the lyric was moved to the end of the timeline, the new time is the current videoDuration of the video + 5 as the timeline has a radius of 5 both in the positive and negative time\n  //((container width - lyric position) / container position) = ratio \n  // newTime = (ratio - .5) * 10\n  const [width, setWidth] = useState(0)\n  const containerRef = useRef()\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      setWidth(containerRef.current.offsetWidth);\n    }\n  }, []);\n\n  //whenever the videoDuration changes refilter the lyrics \n  useEffect(() => {\n    var tempMappedLyrics = Array(3)\n    for (var i = 0; i < tempMappedLyrics.length; i++) {\n      tempMappedLyrics[i] = []\n    }\n    syncedLyrics.forEach((line) => {\n      line.forEach((syncedLyric) => {\n        const diff = syncedLyric.time - videoDuration\n\n        //used to filter the even and odd lyrics (as we only want odd lyrics above and even below to reduce clutter)\n        const filterByParity = (id) => {\n          if (aboveProgressBar) {\n            return 0 <= id % 6 && id % 6 <= 2\n          }\n          else {\n            return 3 <= id % 6 && id % 6 <= 6\n          }\n        }\n\n        //-5 and 5 range makes sure that we only filter lyrics that are within a 5 second radius of the current time, and lyrics that only belong above or below the progress bar. We also do a non-zero check, as all elements being dragged have time 0 temporarily\n        if ((-5 < diff && diff < 5 || !syncedLyric.time) && filterByParity(syncedLyric.id)) {\n          //place in the correct row by taking the remainder in order to split them equally\n\n          tempMappedLyrics[syncedLyric.id % 3].push(syncedLyric)\n        }\n      })\n    })\n    setMappedLyrics(tempMappedLyrics)\n  }, [videoDuration])\n\n  return (\n    <Container ref={containerRef} fluid style={{height: '30%', width: '80%'}} >\n      < >\n        {mappedLyrics.map((row, index) => {\n          return (\n            <Row key={index} style={{marginTop: '8%'}} >\n              {row.map((syncedLyric) => {\n                //value between 0 and 1 representing relative position of this element on the timeline. 0 is leftmost, 1 is rightmost, and 0.5 is the middle\n                const timelineRatio = (syncedLyric.time - videoDuration + 5) / 10;\n\n                //pixel offset is equal to the length of the timeline multiplied by the ratio\n                const timePixelOffset = width * timelineRatio\n                return (<PreviewLyric key={syncedLyric.id} text={syncedLyric.text} id={syncedLyric.id} time={syncedLyric.time} changeLyricById={changeLyricById} videoDuration={videoDuration} timePixelOffset={timePixelOffset} width={width} playing = {playing} setPlaying = {setPlaying}/>)\n              }\n              )}\n            </Row>\n          )\n        })}\n      </>\n    </Container>\n  )\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {useParams, useHistory} from 'react-router-dom';\nimport VideoPlayer from 'components/video_player/video_player'\nimport LyricsTimeLine from 'components/lyrics/preview/lyrics_timeline'\n\nimport {gql} from 'apollo-boost'\nimport {useMutation} from '@apollo/react-hooks';\nimport {useDuration} from 'components/video_player/use_duration'\nimport CustomNavbar from 'components/universal/custom_navbar'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport pauseIcon from 'media/pause.png'\nimport playIcon from 'media/play-button.png'\n\nconst POST_SYNCED_LYRICS = gql`\nmutation postsyncedlyrics($syncedLyrics: [[InputSyncedLyric]], $synchronizationData: InputSynchronizationData){\n  postSyncedLyrics(syncedLyrics: $syncedLyrics, synchronizationData: $synchronizationData)\n}\n`\n\nexport default function ({syncedLyrics, startTime, endTime}) {\n  const {youtubeID, geniusID} = useParams()\n  //refers to the players (used to get and set the current playing time)\n  const playerRef = useRef(null)\n  const skipForwardsRef = useRef(null)\n  const skipBackwardsRef = useRef(null)\n  const history = useHistory()\n\n  //the passed prop is not mutable, so copy it to make it mutable\n  const [mutableSyncedLyrics, setMutableSyncedLyrics] = useState(syncedLyrics)\n\n  //used to send and fnish the preview\n  const [postSyncedLyrics] = useMutation(POST_SYNCED_LYRICS, {\n    variables: {syncedLyrics: mutableSyncedLyrics, synchronizationData: {youtubeID, geniusID, startTime, endTime}},\n    onCompleted: () => {\n      setLyricsPosted(true)\n    }\n  })\n\n  const [videoDuration, setVideoDuration, getIncrementedVideoDuration, displayVideoDuration] = useDuration()\n\n  //tells user what word changed from what time to the new time\n  const [lyricChangeNotification, setLyricChangeNotification] = useState('')\n\n\n  const [showAlert, setShowAlert] = useState(false)\n  const [lyricsPosted, setLyricsPosted] = useState(false)\n\n\n  //given the unique id, set the time. this is used by the timeline and individual words to change the time\n  const changeLyricById = (id, newTime) => {\n    const formatTime = (time) => {\n      return (`${Math.floor(time / 60)}:${time % 60 >= 9 ? (time % 60).toFixed(2) : \"0\" + (time % 60).toFixed(2)}`)\n    }\n    setMutableSyncedLyrics(mutableSyncedLyrics =>\n      mutableSyncedLyrics.map((line) => {\n        return line.map((syncedLyric) => {\n          if (syncedLyric.id === id) {\n            setLyricChangeNotification(`'${syncedLyric.text}' ${formatTime(syncedLyric.time)} → ${formatTime(newTime)}`)\n            return {...syncedLyric, time: newTime}\n          }\n          return syncedLyric\n        })\n      }))\n    playerRef.current.seekTo(newTime - 2)\n  }\n\n  const [playing, setPlaying] = useState(true)\n  const [buffering, setBuffering] = useState(true)\n\n  //create a listener for the videoDuration of the video\n  useEffect(() => {\n    document.addEventListener(\"keydown\", detectKey, false);\n    const interval = setInterval(() => {\n      if (playerRef.current){\n        const currentTime = playerRef.current.getCurrentTime()\n        if (currentTime < startTime) {\n          playerRef.current.seekTo(startTime)\n          setVideoDuration(startTime)\n        }\n        if (currentTime > endTime) {\n          playerRef.seekTo(endTime)\n          setVideoDuration(endTime)\n          setPlaying(false)\n        }\n        else {\n          setVideoDuration(currentTime)\n        }\n      }\n    }, 200);\n    return () => {\n      clearInterval(interval)\n      window.removeEventListener(\"keydown\", detectKey)\n    }\n  }, [])\n\n  const detectKey = (event) => {\n    if (event.code === 'Space') {\n      setPlaying(playing => !playing)\n    }\n  }\n\n  const incrementVideoDuration = (amount) => {\n    const jumpTime = getIncrementedVideoDuration(amount)\n    if (startTime < jumpTime && jumpTime < endTime){\n      playerRef.current.seekTo(jumpTime)\n    }\n  }\n\n  return (\n    <Container fluid style={{paddingLeft: 0, paddingRight: 0}}>\n      <CustomNavbar\n        centerContent={\n          <Navbar.Collapse>\n            <Button disabled={buffering} style={{color: 'black', height: '40px', textAlign: 'center', }} onClick={() => setPlaying(playing => !playing)}>\n              <Image style={{height: 30, width: 30}} src={playing ? pauseIcon : playIcon} />\n            </Button>\n            <Navbar.Text style={{fontSize: 30, marginLeft: 10}} > {displayVideoDuration}</Navbar.Text>\n          </Navbar.Collapse>\n        }\n        customContent={\n          <Navbar.Text style={{fontSize: 15}}>\n            Icons made by <a href=\"https://www.flaticon.com/authors/elias-bikbulatov\" title=\"Elias Bikbulatov\"> Elias Bikbulatov</a>             from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n          </Navbar.Text>\n        }\n      />\n\n      {/* relatively positioned to allow for absolutely positioned container to display over*/}\n      <Container style={{position: 'relative'}}>\n        <Row style={{position: 'relative'}}>\n          <VideoPlayer visible={false} ref={playerRef} playing={playing} setBuffering={setBuffering} url={`https://www.youtube.com/watch?v=${youtubeID}`} disableControls={true} />\n        </Row>\n      </Container>\n      {/* displays over the opacity 0 video */}\n      <Container fluid style={{position: 'absolute', top: 0, left: 0, right: 0, bottom: 0}}>\n        <div style={{\n          position: 'absolute', left: '50%', marginLeft: '-3px', top: 0, bottom: 0, borderLeft: '4px solid black'\n        }}>\n        </div >\n        <Alert style={{position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', zIndex: 1000, }} show={showAlert} dismissible={true} onClose={() => setShowAlert(false)} variant={lyricsPosted ? \"success\" : \"primary\"}>\n          {\n            lyricsPosted\n              ?\n              < >\n                <Alert.Heading>Success: lyrics saved!</Alert.Heading>\n                <Button onClick={() => history.push(`/p/${youtubeID}/${geniusID}`)}> Play now!</Button>\n              </>\n              :\n              < >\n                <Alert.Heading style={{justifyContent: 'center'}}> Click the button below to confirm your submission </Alert.Heading>\n                <Button onClick={() => postSyncedLyrics()}> Send Lyric Synchronization</Button>\n              </>\n          }\n        </Alert>\n        <Row className=\"justify-content-center h-10\">\n          <Col xs={5}>\n          </Col>\n          <Col className='align-self-center' xs={1} >\n          </Col>\n          <Col style={{alignSelf: 'center', fontSize: '20px'}} xs={5}>\n          </Col>\n        </Row>\n        <LyricsTimeLine videoDuration={videoDuration} syncedLyrics={mutableSyncedLyrics} changeLyricById={changeLyricById} aboveProgressBar={true} playing={playing} setPlaying={setPlaying} />\n        <Container fluid className=\"mw-100 h-10\">\n          <Row className=\"align-self-center\">\n            <Col xs={1} className=\"align-self-center\">\n              <Button ref={skipBackwardsRef} disabled={buffering} block onClick={() => {incrementVideoDuration(-10); skipBackwardsRef.current.blur()}}>\n                <Image style={{justifyContent: 'center', height: 30, transform: 'scaleX(-1)'}} src={require('media/fast-forward.png')}></Image>\n              </Button>\n            </Col>\n            <Col className=\"align-self-center\" xs={10} >\n              <hr\n                style={{\n                  color: 'black',\n                  backgroundColor: 'black',\n                  height: 2\n                }} />\n            </Col>\n            <Col xs={1} className=\"align-self-center\">\n              <Button ref={skipForwardsRef} disabled={buffering} block onClick={() => {incrementVideoDuration(10); skipForwardsRef.current.blur()}}>\n                <Image style={{justifyContent: 'center', height: 30, }} src={require('media/fast-forward.png')}></Image>\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n        <LyricsTimeLine videoDuration={videoDuration} syncedLyrics={mutableSyncedLyrics} changeLyricById={changeLyricById} aboveProgressBar={false} playing={playing} setPlaying={setPlaying} />\n        <div style={{width: 1, backgroundColor: 'black', position: 'absolute', left: '50%', transform: 'translate(-50%, 0%)'}}></div>\n        <Navbar style={{height: 60, maxWidth: '100%'}} fixed='bottom' bg='secondary' variant='dark'>\n          <Navbar.Collapse style={{position: 'absolute', transform: 'translate(-50%, 0%)', left: '50%'}}>\n            <Navbar.Text style={{fontSize: 40}} >\n              {lyricChangeNotification}\n            </Navbar.Text>\n          </Navbar.Collapse>\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Button onClick={() => setShowAlert(true)}> Submit synchronization </Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    </Container >\n  )\n}\n\n","import React, {useState, useEffect} from 'react'\nexport function useDuration() {\n  const [videoDuration, setVideoDuration] = useState(0)\n  const [displayVideoDuration, setDisplayVideoDuration] = useState('0:00')\n  const getIncrementedVideoDuration = (amount) => {\n    return (amount + videoDuration)\n  }\n\n  useEffect(() => {\n    const minutes = Math.floor(videoDuration / 60)\n    var seconds = Math.floor(videoDuration % 60)\n    //pad the seconds\n    seconds = seconds >= 10 ? seconds : '0' + seconds.toString()\n    setDisplayVideoDuration(`${minutes}:${seconds}`)\n  }, [videoDuration])\n  return [videoDuration, setVideoDuration, getIncrementedVideoDuration, displayVideoDuration]\n}\n\n","import React, {useState, useEffect, useRef} from 'react';\nimport VideoPlayer from 'components/video_player/video_player'\nimport {useParams} from \"react-router-dom\";\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks';\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Loading from 'components/universal/loading'\nimport Card from 'react-bootstrap/Card'\nimport AnimatedP from 'components/universal/animated_p'\nimport CustomNavbar from 'components/universal/custom_navbar'\nimport LyricsSyncPreview from 'components/lyrics/preview/preview'\n\nconst PROCESSED_LYRICS = gql`\nquery processedlyrics($id: String){\n  processedLyrics(id: $id){\n    id\n    text\n  }\n}`\n\nexport default function LyricsSyncCreator({startTime, endTime}) {\n  console.log(startTime)\n  console.log(endTime)\n  const {youtubeID, geniusID} = useParams()\n\n  const playerRef = useRef(null)\n\n  //denotes the epoch time when the video started playing. used to calculate the time when a key was pressed.\n  const [playing, setPlaying] = useState(false)\n\n  //called by the video player when the video has finished playing. used to conditionally render the preview \n  const [ended, setEnded] = useState(false)\n  const [currentRow, setCurrentRow] = useState(0)\n  const [currentCol, setCurrentCol] = useState(0)\n  useEffect(() => {\n    document.addEventListener(\"keydown\", detectKey, false);\n    return () => window.removeEventListener(\"keydown\", detectKey)\n  }, [])\n\n  //used to trigger useEffect (boolean hooks always seem to be their initial value inside functions)\n  const detectKey = ((event) => {\n    if (event.keyCode) {\n      setKeyPresses(keyPresses => setKeyPresses(keyPresses + 1))\n    }\n  })\n\n  //saves the word and the time since the last word was synced {text, sleepAfter}. The initial timeStamp is a null word that simply denotes the length before the first lyric\n\n  const [syncedLyrics, setSyncedLyrics] = useState({})\n\n  //called whenever a word is synced\n  const syncWord = () => {\n    //not out of bounds\n    if (currentRow < syncedLyrics.length) {\n      //add the elapsed time and current word to the timestamp words mapping\n      setSyncedLyrics(syncedLyrics => syncedLyrics.map((row, rowIndex) => {\n        return (\n          row.map((word, colIndex) => {\n            //if the currentWord set the time \n            if (rowIndex === currentRow && colIndex === currentCol) {\n              word.time = playerRef.current.getCurrentTime()\n            }\n            return word\n          })\n        )\n      }))\n      //on last word of row, go to the start of the next row\n      if (syncedLyrics[currentRow].length - 1 === currentCol) {\n        setCurrentRow(currentRow => currentRow + 1)\n        setCurrentCol(0)\n      }\n\n      //otherwise the next col\n      else {\n        setCurrentCol(currentCol => currentCol + 1)\n      }\n    }\n  }\n\n  //create end time listener\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (playerRef.current) {\n        if (playerRef.current.getCurrentTime() > endTime) {\n          setEnded(true)\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval)\n  }, [playerRef.current])\n\n  //used to tell the user what to do\n  const [instructions, setInstructions] = useState(\"Waiting for lyrics to be processed...\")\n\n  //used to tell Video Player to start playing the song\n  const [buffering, setBuffering] = useState(true)\n\n  const [keyPresses, setKeyPresses] = useState(0)\n  //once the processed lyrics have been loaded, start listening to key presses\n  const {data} = useQuery(PROCESSED_LYRICS, {\n    variables: {id: geniusID},\n    onCompleted: (() => {\n      ////remove __typename and set the synced lyrics to be the fetched ones\n      setSyncedLyrics(\n        data.processedLyrics.map((row) => {\n          return (\n            row.map((word) => {\n              delete word.__typename\n              return word\n            })\n          )\n        })\n      )\n      setInstructions('Press any key to start the video')\n    })\n  })\n\n  useEffect(() => {\n    if (keyPresses != 0) {\n      if (!playing) {\n        setPlaying(true)\n        if (playerRef.current){\n        playerRef.current.seekTo(startTime)\n        }\n      }\n      //if the video has started and a key was pressed, sync the current word\n      else if (!buffering) {\n        syncWord()\n      }\n    }\n  }, [keyPresses])\n\n\n  //when the startingTime has been set to a nonzero value by the video player the video has started playing \n  useEffect(() => {\n    if (!buffering) {\n      setInstructions(\"Whenever the highlighted word is said, press any key to sync it.\")\n    }\n  }, [buffering])\n  return (\n    ended\n      ? <LyricsSyncPreview syncedLyrics={syncedLyrics} startTime = {startTime} endTime = {endTime}/>\n      : <Container fluid style={{paddingLeft: 0, paddingRight: 0 }}>\n        <CustomNavbar centerContent = {\n            <AnimatedP text={instructions} style = {{fontSize: 30, color: 'white', zIndex: 1000, textAlign: 'center', }}/>\n        }/>\n        <Row className=\"justify-content-md-center\">\n          <VideoPlayer visible={true} ref={playerRef} fadeOut={false} playing={playing} url={`https://www.youtube.com/watch?v=${youtubeID}`} setEnded={setEnded} setBuffering={setBuffering} disableControls={true} />\n        </Row>\n        {\n          data\n            ? data.processedLyrics.slice(currentRow).map((line, rowIndex) => {\n              return (\n                <Row className=\"justify-content-md-center\" style={{minWidth: '100%'}} key={rowIndex}>\n                  {\n                    line.map((word, colIndex) => {\n                      return (\n                        rowIndex === 0 && currentCol === colIndex\n                          ?\n                          <mark key={word.id} style={{\n                            backgroundColor: '#007bff', color: '#fff', marginBottom: 10, fontSize: '40px', marginLeft: '0.5em',\n                          }}>{word.text}</mark>\n                          :\n                          <p key={word.id} style={{\n                            marginBottom: 10, fontSize: '40px', marginLeft: '0.5em',\n                          }}>{word.text}</p>\n                      )\n                    })\n                  }\n                </Row>\n              )\n            })\n            :\n            <Loading centered />\n        }\n      </Container>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});"],"sourceRoot":""}