{"version":3,"sources":["media/home.png","components/lyrics/syncing/lyrics_sync_router.js","../node_modules/react-bootstrap/esm/Container.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","SearchResultForm","lazy","VideoClipper","GENIUS_SONG_DATA","gql","YOUTUBE_SEARCH_RESULTS","LyricsSyncRouter","history","useHistory","useParams","youtubeID","geniusID","useState","input","setInput","useQuery","variables","id","skip","onCompleted","geniusSongData","text","data","processedYoutubeSearch","setProcessedYoutubeSearch","query","youtubeSearchResults","map","result","forwardingUrl","youtubeSearchLoading","loading","youtubeSearchError","error","imgUrl","fluid","style","paddingLeft","paddingRight","className","fontSize","width","height","src","fallback","results","formText","formFontSize","defaultValue","undefined","centered","push","Container","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","createElement","_extends","classNames","displayName","defaultProps","clientId","SIGNED_IN_USER","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","useWindowSize","innerWidth","innerHeight","tokenId","setTokenId","useLazyQuery","console","log","signedInUser","existsInDB","setShowAlert","fetchPolicy","fetchUserInfo","inputUsername","setInputUsername","userName","userNameTaken","showAlert","useMutation","postUser","Alert","position","left","top","transform","zIndex","show","dismissible","onClose","variant","Heading","Form","onSubmit","e","preventDefault","onChange","target","value","Control","marginTop","placeholder","autoFocus","Button","disabled","onClick","Navbar","sticky","bg","Brand","justifyContent","size","alt","require","Collapse","Nav","marginRight","marginBottom","href","data-icon","data-size","data-show-count","aria-label","DropdownButton","title","alignSelf","Dropdown","Item","onLogoutSuccess","onSuccess","response","isSignedIn"],"mappings":"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","file":"static/js/13.ddd644e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React, { useState, lazy, Suspense } from 'react';\nimport Loading from 'components/universal/loading';\nimport { useQuery , gql} from '@apollo/client'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport CustomNavBar from 'components/universal/custom_navbar';\nconst SearchResultForm = lazy(() => import('components/navigation/search_results_form'));\nconst VideoClipper = lazy(() => import('components/video_player/video_clipper'));\n\nconst GENIUS_SONG_DATA = gql`\n  query geniussongdata($id: String) {\n    geniusSongData(id: $id) {\n      id\n      text\n      imgUrl\n    }\n  }\n`;\nconst YOUTUBE_SEARCH_RESULTS = gql`\n  query youtubesearchresults($query: String) {\n    youtubeSearchResults(query: $query) {\n      id\n      text\n      imgUrl\n    }\n  }\n`;\nexport default function LyricsSyncRouter() {\n  const history = useHistory();\n  //y = youtube id, g = genius id\n  let { youtubeID, geniusID } = useParams();\n  const [input, setInput] = useState('');\n\n  //fetch song data if the  genius id parameter is defined\n  const { data: { geniusSongData } = {} } = useQuery(GENIUS_SONG_DATA, {\n    variables: { id: geniusID },\n    skip: geniusID && geniusID === '0',\n    onCompleted: () => {\n      setInput(geniusSongData.text);\n    },\n  });\n\n  //the server does not apply a routing url as it does not know the genius id (as geniusID is needed to create) /sync/:youtubeID/:geniusID, so we postProcess in the onCompleted hook of the youtube search in to this hook\n  const [processedYoutubeSearch, setProcessedYoutubeSearch] = useState([]);\n  const { data, loading: youtubeSearchLoading, error: youtubeSearchError } = useQuery(YOUTUBE_SEARCH_RESULTS, {\n    variables: { query: input },\n    onCompleted: (data) => {\n      setProcessedYoutubeSearch(\n        data.youtubeSearchResults.map((result) => {\n          result.forwardingUrl = `/sync/${result.id}/${geniusID}`;\n          return result;\n        })\n      );\n    },\n    skip: input === '',\n  });\n\n  //not missing genius ID\n  if (geniusID !== '0') {\n    //missing youtube url, provide youtube search input to find one\n    if (youtubeID === '0') {\n      if (geniusSongData) {\n        const { imgUrl, text } = geniusSongData;\n        return (\n          <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n            <CustomNavBar />\n            <Row className='justify-content-md-center'>\n              <p style={{ fontSize: 30 }}>{text}</p>\n            </Row>\n            <Row className='justify-content-md-center'>\n              <Image style={{ width: '15%', height: '15%' }} src={imgUrl} />\n            </Row>\n            <Suspense fallback={<Loading />}>\n              <SearchResultForm results={processedYoutubeSearch} input={input} setInput={setInput} formText={youtubeSearchError ? 'Search for a YouTube video or enter enter a Youtube URL to sync the lyrics to:' : 'Enter a Youtube URL to sync the lyrics to:'} formFontSize={30} loading={youtubeSearchLoading} defaultValue={youtubeSearchError ? undefined : text} />\n            </Suspense>\n          </Container>\n        );\n      } else {\n        return (\n          <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n            <CustomNavBar />\n            <Row className='justify-content-md-center'>\n              <Loading />\n            </Row>\n          </Container>\n        );\n      }\n    }\n    //both found, provide UI for videoclipping\n    else {\n      return (\n        <Suspense fallback={<Loading centered />}>\n          <VideoClipper />\n        </Suspense>\n      );\n    }\n  }\n\n  //missing genius ID\n  else {\n    //also missing YouTube ID, just route the user to the home page because they somehow messed up\n    if (youtubeID === '0') {\n      history.push('/');\n    }\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query signedinuser($tokenId: String) {\n    signedInUser(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { signedInUser } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      console.log('fetched');\n      console.log(signedInUser);\n      if (!signedInUser.existsInDB) {\n        setShowAlert(true);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !signedInUser || signedInUser.existsInDB,\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        dismissible={true}\n        onClose={() => setShowAlert(false)}\n        variant='primary'\n      >\n        {\n          <>\n            <Alert.Heading>Create a username for your account</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                postUser();\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt = \"Home\" src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {signedInUser && signedInUser.existsInDB ? (\n            <DropdownButton title={`Signed in as ${signedInUser.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${signedInUser.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}