{"version":3,"sources":["media/home.png","../node_modules/@rehooks/component-size/index.js","media/cat_nodding.gif","components/lyrics/playing/synced_lyric.js","components/lyrics/playing/synced_lyric_mapper.js","components/lyrics/playing/pregame_popover.js","components/lyrics/playing/game_entry.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","React","require","useState","useCallback","useLayoutEffect","getSize","el","width","offsetWidth","height","offsetHeight","ref","_useState","current","ComponentSize","setComponentSize","handleResize","ResizeObserver","resizeObserver","observe","disconnect","window","addEventListener","removeEventListener","SyncedLyric","text","topOffset","time","id","commonSuffixLength","horizontalOffsetPercentage","Container","style","position","transition","left","color","display","substring","SyncedLyricMapper","syncedLyrics","input","setInput","setTotalCharacters","videoDuration","animateBackgroundColor","containerRef","useRef","useComponentSize","bucketIndex","setBucketIndex","visibleLyrics","setVisibleLyrics","useEffect","allDeployed","removedOne","newVisibleLyrics","map","syncedLyric","indexOf","length","filter","totalCharacters","newIndex","push","removeByID","top","bottom","right","zIndex","s","key","PregamePopover","playing","setPlaying","setShowCat","gameStats","selectedTab","setSelectedTab","showAlert","setShowAlert","Alert","show","variant","className","marginBottom","transform","Nav","activeKey","onSelect","Item","Link","eventKey","gameStat","playerUserName","wordsPerMinute","accuracy","Row","bb","Col","borderColor","justifyContent","xs","alignSelf","Form","Check","onClick","e","target","checked","fontSize","dismissible","onClose","Heading","textAlign","Button","SYNCED_LYRIC_QUERY","gql","SYNCHRONIZATION_DATA","POST_GAME_STATS","GAME_STATS","GameEntry","useParams","creatorUserName","youtubeID","geniusID","useQuery","variables","data","loading","synchronizationData","error","showCat","useLazyQuery","fetchPolicy","fetchGameStats","playerRef","interval","setInterval","setVideoDuration","getCurrentTime","clearInterval","tokenId","setTokenId","console","log","useMutation","onCompleted","postGameStats","seekTo","startTime","history","useHistory","backgroundColor","setBackgroundColor","a","Promise","resolve","setTimeout","formRef","focus","setParentTokenId","onChange","value","Control","autoFocus","url","onEnded","opacity","Image","src","clientId","SIGNED_IN_USER","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentUserName","useWindowSize","innerWidth","innerHeight","userData","existsInDB","userName","fetchUserInfo","inputUsername","setInputUsername","skip","userNameTaken","postUser","onSubmit","preventDefault","marginTop","placeholder","disabled","Navbar","sticky","bg","Brand","size","alt","Collapse","marginRight","href","data-icon","data-size","data-show-count","aria-label","DropdownButton","title","Dropdown","paddingLeft","paddingRight","onLogoutSuccess","onSuccess","response","onFailure","isSignedIn"],"mappings":"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","file":"static/js/9.062914b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","'use strict'\nvar React = require('react')\nvar useState = React.useState\nvar useCallback = React.useCallback\nvar useLayoutEffect = React.useLayoutEffect\n\nfunction getSize(el) {\n  if (!el) {\n    return {\n      width: 0,\n      height: 0\n    }\n  }\n\n  return {\n    width: el.offsetWidth,\n    height: el.offsetHeight\n  }\n}\n\nfunction useComponentSize(ref) {\n  var _useState = useState(getSize(ref ? ref.current : {}))\n  var ComponentSize = _useState[0]\n  var setComponentSize = _useState[1]\n\n  var handleResize = useCallback(\n    function handleResize() {\n      if (ref.current) {\n        setComponentSize(getSize(ref.current))\n      }\n    },\n    [ref]\n  )\n\n  useLayoutEffect(\n    function() {\n      if (!ref.current) {\n        return\n      }\n\n      handleResize()\n\n      if (typeof ResizeObserver === 'function') {\n        var resizeObserver = new ResizeObserver(function() {\n          handleResize()\n        })\n        resizeObserver.observe(ref.current)\n\n        return function() {\n          resizeObserver.disconnect(ref.current)\n          resizeObserver = null\n        }\n      } else {\n        window.addEventListener('resize', handleResize)\n\n        return function() {\n          window.removeEventListener('resize', handleResize)\n        }\n      }\n    },\n    [ref.current]\n  )\n\n  return ComponentSize\n}\n\nmodule.exports = useComponentSize\n","module.exports = __webpack_public_path__ + \"static/media/cat_nodding.1327cfd0.gif\";","import React from 'react'; \nimport Container from 'react-bootstrap/Container'\nexport default function SyncedLyric({text, time, id, topOffset, commonSuffixLength, horizontalOffsetPercentage}){\n  return (\n    <Container>\n      <div style={{width: 'auto', position: 'absolute', 'transform': `translate(-50%, ${topOffset}px)`, transition: `opacity .1s ease-in-out, top 2s ease-in-out`, left: `${horizontalOffsetPercentage}%`}}>\n        <p>\n          <span style={{color: 'green', display: 'inline-block'}}>\n            {text.substring(0,  commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n          <span style={{color: 'black', display: 'inline-block'}}>\n            {text.substring(commonSuffixLength ? commonSuffixLength : 0)}\n          </span>\n        </p>\n      </div>\n    </Container>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport SyncedLyric from 'components/lyrics/playing/synced_lyric';\nimport useComponentSize from '@rehooks/component-size';\n\nconst fallingTime = 3;\nexport default function SyncedLyricMapper({ syncedLyrics, input, setInput, setTotalCharacters, videoDuration, animateBackgroundColor }) {\n  const containerRef = useRef();\n  const { height } = useComponentSize(containerRef);\n\n  const [bucketIndex, setBucketIndex] = useState(0);\n  const [visibleLyrics, setVisibleLyrics] = useState(syncedLyrics[0]);\n\n  //this simply shifts currently visible lyrics downwards and filters lryics that are out of time\n  useEffect(() => {\n    //whether or not the top offset of all current lyrics is positive\n    var allDeployed = true;\n\n    //if two words exist at the same time dont remove both\n    var removedOne = false\n    const newVisibleLyrics = visibleLyrics\n      .map((syncedLyric) => {\n        //calculate how far far\n        var topOffset = ((videoDuration - syncedLyric.time) / fallingTime) * height;\n        if (topOffset <= 0) {\n          topOffset = 0;\n          allDeployed = false;\n        }\n        syncedLyric.topOffset = topOffset;\n\n        //matching suffix (0)\n        if (syncedLyric.text.indexOf(input) === 0) {\n          syncedLyric.commonSuffixLength = input.length;\n        }\n        // indexof is not 0\n        else {\n          syncedLyric.commonSuffixLength = 0;\n        }\n        return syncedLyric;\n      })\n      //filter correct words and out of date ones\n      .filter((syncedLyric) => {\n\n        if (videoDuration - syncedLyric.time > fallingTime) {\n          animateBackgroundColor('red');\n          return false;\n        }\n        //got correct\n        else if (!removedOne && syncedLyric.text + ' ' === input) {\n          //dont remove the same word again\n          removedOne = true\n\n          //set input empty\n          setInput('');\n\n          //quick green flash\n          animateBackgroundColor('green');\n\n          //add to total character count which will be used to calculate and save wpm\n          setTotalCharacters((totalCharacters) => {\n            return totalCharacters + syncedLyric.text.length;\n          });\n          return false;\n        } else {\n          return true;\n        }\n      });\n    //if all the current visible lyrics have top offset greater than 0 then add the next index of lyrics in\n    if (allDeployed) {\n      const newIndex = bucketIndex + 1;\n      if (newIndex < syncedLyrics.length) {\n        setBucketIndex(newIndex);\n        newVisibleLyrics.push(...syncedLyrics[newIndex]);\n      }\n    }\n    setVisibleLyrics(newVisibleLyrics);\n  }, [videoDuration, animateBackgroundColor, height, syncedLyrics]);\n\n  //used by synced lyrics to destroy themselves\n  const removeByID = (id) => {\n    setVisibleLyrics.filter((syncedLyric) => {\n      return syncedLyric.id !== id;\n    });\n  };\n\n  return (\n    <div ref={containerRef} style={{ position: 'absolute', top: 60, bottom: '20%', left: 0, right: 0, zIndex: 1000 }}>\n      {visibleLyrics === [] ? null : visibleLyrics.map((s) => <SyncedLyric key={s.id} {...s} input={input} removeByID={removeByID} topOffset={s.topOffset} commonSuffixLength={s.commonSuffixLength} />)}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport 'components/lyrics/playing/pregame_popover.css';\nexport default function PregamePopover({ playing, setPlaying, setShowCat, gameStats }) {\n  const [selectedTab, setSelectedTab] = useState('/leaderboards');\n  const [showAlert, setShowAlert] = useState('');\n  return (\n    <Alert\n      show={!playing}\n      variant='primary'\n      className='shadow-lg fade'\n      style={{\n        top: 80,\n        bottom: 20,\n        marginBottom: 0,\n        position: 'absolute',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        width: '50%',\n        zIndex: 1000,\n      }}\n    >\n      <Nav style={{ height: '10%' }} variant='pills' activeKey={selectedTab} onSelect={(selectedTab) => setSelectedTab(selectedTab)}>\n        <Nav.Item>\n          <Nav.Link eventKey='/leaderboards'>Leaderboards</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey='/options'>Options</Nav.Link>\n        </Nav.Item>\n      </Nav>\n      {selectedTab === '/leaderboards' ? (\n        gameStats ? (\n          gameStats.map((gameStat) => {\n            const { playerUserName, wordsPerMinute, accuracy } = gameStat;\n            return (\n              <Row id={gameStat.bb} style={{ height: '10%' }}>\n                <Col style={{ borderColor: 'black' }}>\n                  <p>{playerUserName}</p>\n                </Col>\n                <Col style={{ justifyContent: 'right' }}>\n                  <p>{`${wordsPerMinute}wpm`} </p>\n                </Col>\n                <Col style={{ justifyContent: 'right' }}>\n                  <p>{`${accuracy}%`}</p>\n                </Col>\n              </Row>\n            );\n          })\n        ) : null\n      ) : (\n        <Row>\n          <Col xs={1} style={{ alignSelf: 'center' }}>\n            <Form.Check\n              onClick={(e) => {\n                setShowCat(e.target.checked);\n                setShowAlert(true);\n              }}\n              variant='checkbox'\n            />\n          </Col>\n          <Col>\n            <p style={{ alignSelf: 'center', fontSize: 40, marginBottom: 0 }}>Add cat</p>\n            <Alert dismissible show={showAlert} onClose={() => setShowAlert(false)} style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }} variant='danger'>\n              <Alert.Heading style={{ textAlign: 'center' }}>Warning! This setting only works for absolute bangers!</Alert.Heading>\n              <Row style={{ justifyContent: 'center' }}>\n                <Button onClick={() => setShowAlert(false)}>Don't worry I only play bangers</Button>\n              </Row>\n            </Alert>\n          </Col>\n        </Row>\n      )}\n      <Row style={{ justifyContent: 'center', height: '10%' }}>\n        <Button style = {{height: '40%', alignSelf:\"center\"}} onClick={() => setPlaying(true)}>Play!</Button>\n      </Row>\n    </Alert>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport SyncedLyricMapper from 'components/lyrics/playing/synced_lyric_mapper';\nimport { useParams } from 'react-router-dom';\nimport CustomNavBar from 'components/universal/custom_navbar';\nimport PregamePopover from 'components/lyrics/playing/pregame_popover';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport Loading from 'components/universal/loading';\nimport { useHistory } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\n\nconst SYNCED_LYRIC_QUERY = gql`\n  query syncedlyrics($youtubeID: String, $geniusID: String) {\n    syncedLyrics(youtubeID: $youtubeID, geniusID: $geniusID) {\n      text\n      time\n      id\n      horizontalOffsetPercentage\n    }\n  }\n`;\nconst SYNCHRONIZATION_DATA = gql`\n  query synchronizationdata($youtubeID: String, $geniusID: String) {\n    synchronizationData(youtubeID: $youtubeID, geniusID: $geniusID) {\n      startTime\n      endTime\n    }\n  }\n`;\n\nconst POST_GAME_STATS = gql`\n  mutation postgamestats($gameStats: InputGameStats!) {\n    postGameStats(gameStats: $gameStats)\n  }\n`;\n\nconst GAME_STATS = gql`\n  query gamestats($youtubeID: String, $geniusID: String, $creatorUserName: String) {\n    gameStats(youtubeID: $youtubeID, geniusID: $geniusID, creatorUserName: $creatorUserName) {\n      playerUserName\n      wordsPerMinute\n      accuracy\n    }\n  }\n`;\nexport default function GameEntry() {\n  const { creatorUserName, youtubeID, geniusID } = useParams();\n  const { data: { syncedLyrics } = {}, loading } = useQuery(SYNCED_LYRIC_QUERY, {\n    variables: { youtubeID, geniusID },\n  });\n  const { data: { synchronizationData } = {}, error } = useQuery(SYNCHRONIZATION_DATA, {\n    variables: { youtubeID, geniusID },\n  });\n\n  //playing is set to true from the pregame popup\n  const [playing, setPlaying] = useState(false);\n\n  //cat easter egg also set by the pregame popup\n  const [showCat, setShowCat] = useState(false);\n\n  //fetches game stats\n  const [fetchGameStats, { data: { gameStats } = {} }] = useLazyQuery(GAME_STATS, {\n    variables: { geniusID, youtubeID, creatorUserName },\n    fetchPolicy: 'network-only',\n  });\n\n  //used to jump to startTime and to listen to the videoDuration\n  const playerRef = useRef();\n  useEffect(() => {\n    fetchGameStats();\n    const interval = setInterval(() => {\n      if (playerRef.current) {\n        setVideoDuration(playerRef.current.getCurrentTime());\n      }\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  //set tokenID is passed to the navbar component which allows us to fetch more\n  const [tokenId, setTokenId] = useState('');\n\n  //tracks the total typed characters which is used to calculate wpm\n  const [totalCharacters, setTotalCharacters] = useState(0);\n  console.log({\n    gameStats: {\n      tokenId,\n      creatorUserName,\n      youtubeID,\n      geniusID,\n      totalCharacters,\n    },\n  });\n\n  const [postGameStats] = useMutation(POST_GAME_STATS, {\n    variables: {\n      gameStats: {\n        tokenId,\n        creatorUserName,\n        youtubeID,\n        geniusID,\n        totalCharacters,\n      },\n    },\n    //once we have posted the new results fetch the new leaderboards including our new time\n    onCompleted: () => {\n      fetchGameStats();\n    },\n  });\n\n  useEffect(() => {\n    if (playing && synchronizationData) {\n      playerRef.current.seekTo(synchronizationData[0].startTime);\n    }\n  }, [synchronizationData, playing]);\n  const history = useHistory();\n\n  const [input, setInput] = useState('');\n\n  const [backgroundColor, setBackgroundColor] = useState('white');\n  const animateBackgroundColor = async (color) => {\n    setBackgroundColor(color);\n    await new Promise((resolve) => setTimeout(resolve, 100));\n    setBackgroundColor('white');\n  };\n\n  const [videoDuration, setVideoDuration] = useState(0);\n\n\n  const formRef = useRef();\n  //when you start playing focus on the form\n  useEffect(() => {\n    if (formRef.current){\n      formRef.current.focus()\n    }\n  }, [playing])\n\n  if (!youtubeID || !geniusID) {\n    return 'Invalid URL: Missing either a youtubeID or a geniusID';\n  }\n  return (\n    <>\n      <CustomNavBar setParentTokenId={setTokenId} />\n      {error ? (\n        <Row className='justify-content-md-center'>\n          <Button onClick={() => history.push(`/sync/${youtubeID}/${geniusID}`)}>\n            <p>Create synchronization for this song and video.</p>\n          </Button>\n        </Row>\n      ) : !loading ? (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            backgroundColor: backgroundColor,\n            transition: 'background-color 200ms',\n          }}\n        >\n          <PregamePopover playing={playing} setPlaying={setPlaying} setShowCat={setShowCat} gameStats={gameStats} />\n          <Row>\n            <Form\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: '50%',\n                width: 800,\n                transform: 'translate(-50%, 0%)',\n                fontSize: 100,\n              }}\n              onChange={(e) => setInput(e.target.value)}\n            >\n              <Form.Control onChange={(e) => setInput(e.target.value)} value={input} className='shadow-lg' ref={formRef} style={{ fontSize: 40 }} autoFocus />\n            </Form>\n          </Row>\n          <ReactPlayer\n            ref={playerRef}\n            url={`https://www.youtube.com/watch?v=${youtubeID}`}\n            playing={playing}\n            onEnded={() => {\n              setPlaying(false);\n              postGameStats();\n            }}\n            style={{ opacity: 0 }}\n          />\n          {playing ? (\n            <>\n              <SyncedLyricMapper input={input} setInput={setInput} setTotalCharacters={setTotalCharacters} syncedLyrics={loading ? [] : syncedLyrics} videoDuration={videoDuration} animateBackgroundColor={animateBackgroundColor} />\n              {showCat ? (\n                <Image\n                  style={{\n                    height: 500,\n                    width: 500,\n                    position: 'absolute',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    top: '50%',\n                    zIndex: 0,\n                  }}\n                  src={require('../../../media/cat_nodding.gif')}\n                ></Image>\n              ) : null}\n            </>\n          ) : null}\n        </div>\n      ) : (\n        <>\n          <Row style={{ justifyContent: 'center' }}>\n            <p>Loading lyrics</p>\n          </Row>\n          <Row style={{ justifyContent: 'center' }}>\n            <Loading />\n          </Row>\n        </>\n      )}\n    </>\n  );\n}\n","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query userdata($tokenId: String) {\n    userData(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId, setParentUserName }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { userData } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!userData.existsInDB) {\n        setShowAlert(true);\n      }\n      //if a userName listener was passed from a parent component then set the value once its available\n      else if (setParentUserName) {\n        setParentUserName(userData.userName);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !userData || userData.existsInDB || inputUsername === '',\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        onClose={() => setShowAlert(false)}\n        variant={userNameTaken ? 'danger' : 'primary'}\n      >\n        {\n          <>\n            <Alert.Heading>{userNameTaken ? 'This username is taken' : 'Create a username for your account'}</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (!userNameTaken) {\n                  postUser();\n                }\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt='Home' src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {userData && userData.existsInDB ? (\n            <DropdownButton title={`Signed in as ${userData.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${userData.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                onFailure={(response) => {\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}