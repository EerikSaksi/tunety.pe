{"version":3,"sources":["media/home.png","components/navigation/search_result_text.js","components/navigation/search_result.js","components/universal/custom_card.js","components/navigation/search_result_horizontal_view.js","components/navigation/profile.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","SearchResultText","text","style","position","height","opacity","textOverflow","width","display","backgroundColor","alignSelf","color","fontSize","margin","SearchResult","forwardingUrl","imgUrl","bottomText","centerText","topText","fadeInMillis","history","useHistory","useState","hovering","setHovering","setOpacity","useEffect","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","Col","xs","transition","marginTop","marginBottom","marginRight","marginLeft","padding","onMouseEnter","onMouseLeave","Button","border","onClick","push","Image","className","rounded","src","top","left","transform","bottom","CustomCard","children","title","imgOverlay","linkText","linkHref","useInView","threshold","inViewRef","inView","useWindowSize","innerWidth","innerHeight","ref","Title","textAlign","Link","zIndex","href","ImgOverlay","SearchResultHorizontalView","searchResults","dateClassified","displayDate","mappedResults","filter","searchResult","dateClassifier","map","maxWidth","length","Row","alignItems","overflowX","USER_DATA","gql","Profile","cardContent","userName","useParams","useQuery","variables","data","userData","loading","selectedTab","setSelectedTab","centered","existsInDB","gameStats","gameStat","synchronizations","synchronization","console","log","Nav","justifyContent","variant","activeKey","onSelect","Item","eventKey","clientId","SIGNED_IN_USER","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","tokenId","setTokenId","useLazyQuery","onCompleted","setShowAlert","fetchPolicy","fetchUserInfo","inputUsername","setInputUsername","skip","userNameTaken","showAlert","useMutation","postUser","Alert","show","dismissible","onClose","Heading","Form","onSubmit","e","preventDefault","onChange","target","value","Control","placeholder","autoFocus","disabled","Navbar","sticky","bg","Brand","size","alt","require","Collapse","data-icon","data-size","data-show-count","aria-label","DropdownButton","Dropdown","paddingLeft","paddingRight","onLogoutSuccess","onSuccess","response","isSignedIn"],"mappings":"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","file":"static/js/11.ef3f825d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React from 'react';\nexport default function SearchResultText({ text, style }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 30,\n        opacity: 0.8,\n        textOverflow: 'ellipsis',\n        width: '100%',\n        display: 'flex',\n        backgroundColor: 'white',\n        ...style,\n      }}\n    >\n      <p\n        style={{\n          alignSelf: 'center',\n          width: '100%',\n          textOverflow: 'ellipsis',\n          color: 'black',\n          fontSize: 20,\n          margin: 0,\n        }}\n      >\n        {text}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport SearchResultText from 'components/navigation/search_result_text';\nexport default function SearchResult({ forwardingUrl, imgUrl, bottomText, centerText, topText, fadeInMillis, style }) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  const [hovering, setHovering] = useState(false);\n\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise((resolve) => setTimeout(resolve, millis));\n      setOpacity(1);\n    }\n    sleepBeforeAppear(fadeInMillis);\n  }, [fadeInMillis]);\n\n  return (\n    <Col\n      xs={3}\n      style={{\n        transition: 'opacity 0.5s',\n        opacity: opacity,\n        marginTop: 10,\n        marginBottom: 10,\n        marginRight: 10,\n        marginLeft: 10,\n        padding: 0,\n        ...style\n      }}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    >\n      <Button\n        style={{ height: 'min(100%, 347.5)', width: 'auto', padding: 0, border: 0, ...style }}\n        onClick={() => history.push(forwardingUrl)}\n      >\n        <Image\n          className={hovering ? 'shadow-lg' : ''}\n          style={{ width: '100%', height: '100%', transition: 'all 200ms' }}\n          rounded\n          src={imgUrl}\n        />\n        <SearchResultText style={{ top: 0 }} text={topText} />\n        <SearchResultText\n          style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)',  width: 'auto'}}\n          text={centerText}\n        />\n        <SearchResultText style={{ bottom: 0 }} text={bottomText} />\n      </Button>\n    </Col>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport useWindowSize from '@rehooks/window-size';\nimport {useInView} from 'react-hook-inview'\nexport default function CustomCard ({children, title, imgOverlay, linkText, linkHref, style}) {\n  const [opacity, setOpacity] = useState(0)\n  const [inViewRef, inView] = useInView({\n    threshold: 0.5\n  })\n  useEffect(() => {\n    if (inView) {\n      setOpacity(1)\n    }\n  }, [inView])\n\n\n  const {innerWidth, innerHeight} = useWindowSize()\n  return (\n    <Card ref={inViewRef} className=\"shadow-lg\" style={{width: `${0.8 * innerWidth}`, position: 'relative', left: '50%', transform: 'translate(-50%, 0px)', opacity: opacity, transition: 'opacity 500ms', marginBottom: 20, marginTop: 20, height: innerHeight - 100, ...style}} border='primary' >\n      < >\n        <Card.Title style={{fontSize: 40, textAlign: 'center'}}>\n          {title}\n        </Card.Title>\n        <Card.Link style={{fontSize: 20, textAlign: 'center', zIndex: 1000, }} href={linkHref}>\n          {linkText}\n        </Card.Link>\n        <Card.ImgOverlay>\n          {imgOverlay}\n        </Card.ImgOverlay>\n        {children}\n      </>\n    </Card>\n  )\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SearchResult from 'components/navigation/search_result';\n\nexport default function SearchResultHorizontalView({ searchResults, dateClassified, displayDate }) {\n  //we want to filter only the searchResults that match the dateClassified enum\n  //enum DateClassified{\n  //  TODAY\n  //  YESTERDAY\n  //  THIS_WEEK\n  //  FURTHER_BACK\n  //}\n\n  const mappedResults = searchResults\n    .filter((searchResult) => searchResult.dateClassifier.dateClassified === dateClassified)\n    .map((searchResult) => <SearchResult {...searchResult} style={{ height: 300, maxWidth: 300 }} />);\n\n  //if no results don't even render for example 'This Week' with no elements\n  if (!mappedResults.length) {\n    return null;\n  }\n  return (\n    <>\n      <Row style={{ marginTop: '1.5em' }}>\n        <p>{displayDate}</p>\n      </Row>\n      <div style={{ display: 'flex', alignItems: 'center', overflowX: 'scroll' }}>{mappedResults}</div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport CustomNavbar from 'components/universal/custom_navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Loading from 'components/universal/loading';\nimport { useParams } from 'react-router-dom';\nimport SearchResultHorizontalView from 'components/navigation/search_result_horizontal_view'\nimport CustomCard from 'components/universal/custom_card';\n\nconst USER_DATA = gql`\n  query userdata($userName: String) {\n    userData(userName: $userName) {\n      userName\n      existsInDB\n      synchronizations {\n        geniusID\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n      gameStats {\n        creatorUserName\n        youtubeID\n        geniusID\n        wordsPerMinute\n        accuracy\n        createdAt\n        searchResult {\n          topText\n          centerText\n          bottomText\n          imgUrl\n          forwardingUrl\n          createdAt\n          dateClassifier{\n            dateClassified\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function Profile() {\n  const { userName } = useParams();\n  const { data: { userData } = {}, loading } = useQuery(USER_DATA, {\n    variables: { userName },\n  });\n  const [selectedTab, setSelectedTab] = useState('/gameStats');\n\n  if (loading) {\n    return <Loading centered />;\n  }\n  if (userData && !userData.existsInDB) {\n    return <p>Couldn't find user</p>;\n  }\n\n  var cardContent;\n  if (loading) {\n    cardContent = <Loading centered />;\n  } else {\n    //select either the synchronizations or the gameStat search result representation\n    const searchResults = selectedTab === '/gameStats' \n      ? userData.gameStats.map(gameStat => gameStat.searchResult)\n      : userData.synchronizations.map(synchronization => synchronization.searchResult)\n\n    console.log(searchResults)\n    //render horizontal views which only map elements that belong in their classified date\n    cardContent = \n      < >\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'TODAY'} displayDate = {'Today'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'YESTERDAY'} displayDate = {'Yesterday'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'THIS_WEEK'} displayDate = {'This Week'}/>\n        <SearchResultHorizontalView searchResults = {searchResults} dateClassified = {'FURTHER_BACK'} displayDate = {'Further Back'}/>\n      </>\n  }\n\n  return (\n    <>\n      <CustomNavbar />\n      <CustomCard style = {{padding: '1em', height: 'auto', }}>\n        <Nav\n          style={{ height: '10%', justifyContent: 'center',zIndex: 100 }}\n          variant='pills'\n          activeKey={selectedTab}\n          onSelect={(selectedTab) => setSelectedTab(selectedTab)}\n        >\n          <Nav.Item >\n            <Nav.Link eventKey='/gameStats'>Game History</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey='/synchronizations'>Created Synchronizations</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        {cardContent}\n      </CustomCard>\n    </>\n  );\n}\n","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query userdata($tokenId: String) {\n    userData(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { userData } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!userData.existsInDB) {\n        setShowAlert(true);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !userData || userData.existsInDB,\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        dismissible={true}\n        onClose={() => setShowAlert(false)}\n        variant='primary'\n      >\n        {\n          <>\n            <Alert.Heading>Create a username for your account</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                postUser();\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt = \"Home\" src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {userData && userData.existsInDB ? (\n            <DropdownButton title={`Signed in as ${userData.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${userData.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  {/* set the token id to the response, which will be used to query the username */}\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n\n                  {/* if passed a tokenId listener by parent, set the value*/}\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}