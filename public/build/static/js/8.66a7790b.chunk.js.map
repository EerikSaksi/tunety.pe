{"version":3,"sources":["media/home.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/universal/custom_card.js","../node_modules/react-hook-inview/dist/esm/index.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","components/navigation/profile.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","CustomCard","children","title","imgOverlay","linkText","linkHref","style","useState","opacity","setOpacity","useInView","threshold","inViewRef","inView","useEffect","useWindowSize","innerWidth","innerHeight","ref","className","width","position","left","transform","transition","marginBottom","marginTop","height","border","Title","fontSize","textAlign","Link","zIndex","href","ImgOverlay","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useObserver","callback","options","externalState","Observer","useRef","onIntersect","useCallback","current","unobserve","IntersectionObserver","currentObserver","observe","ops","root","rootMargin","target","onEnter","onLeave","unobserveOnEnter","setRef","entry","state","setState","observer","isIntersecting","intersectionRatio","thresholds","some","CardImg","React","forwardRef","_ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Subtitle","Body","Text","Header","Footer","SIGNED_IN_USER","gql","Profile","userName","useParams","useQuery","variables","data","signedInUser","loading","centered","existsInDB","justifyContent","synchronizationData","clientId","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","history","useHistory","tokenId","setTokenId","useLazyQuery","onCompleted","setShowAlert","fetchPolicy","fetchUserInfo","inputUsername","setInputUsername","skip","userNameTaken","showAlert","useMutation","postUser","Alert","top","show","dismissible","onClose","Heading","Form","onSubmit","preventDefault","onChange","Control","placeholder","autoFocus","Button","disabled","onClick","Navbar","sticky","Brand","push","size","alt","src","require","Collapse","Nav","marginRight","data-icon","data-size","data-show-count","aria-label","DropdownButton","alignSelf","Dropdown","Item","paddingLeft","paddingRight","onLogoutSuccess","onSuccess","response","isSignedIn"],"mappings":"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","file":"static/js/8.66a7790b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport useWindowSize from '@rehooks/window-size';\nimport {useInView} from 'react-hook-inview'\nexport default function CustomCard ({children, title, imgOverlay, linkText, linkHref, style}) {\n  const [opacity, setOpacity] = useState(0)\n  const [inViewRef, inView] = useInView({\n    threshold: 0.5\n  })\n  useEffect(() => {\n    if (inView) {\n      setOpacity(1)\n    }\n  }, [inView])\n\n\n  const {innerWidth, innerHeight} = useWindowSize()\n  return (\n    <Card ref={inViewRef} className=\"shadow-lg\" style={{width: `${0.8 * innerWidth}`, position: 'relative', left: '50%', transform: 'translate(-50%, 0px)', opacity: opacity, transition: 'opacity 500ms', marginBottom: 20, marginTop: 20, height: innerHeight - 100, ...style}} border='primary' >\n      < >\n        <Card.Title style={{fontSize: 40, textAlign: 'center'}}>\n          {title}\n        </Card.Title>\n        <Card.Link style={{fontSize: 20, textAlign: 'center', zIndex: 1000, }} href={linkHref}>\n          {linkText}\n        </Card.Link>\n        <Card.ImgOverlay>\n          {imgOverlay}\n        </Card.ImgOverlay>\n        {children}\n      </>\n    </Card>\n  )\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useEffect, useState, useRef, useCallback, } from 'react';\nconst useObserver = (ref, callback, options = {}, externalState = []) => {\n    const Observer = useRef(null);\n    const onIntersect = useCallback(callback, [ref, ...externalState]);\n    useEffect(() => {\n        if (!ref)\n            return;\n        if (Observer.current)\n            Observer.current.unobserve(ref);\n        Observer.current = new IntersectionObserver(onIntersect, options);\n        const { current: currentObserver } = Observer;\n        currentObserver.observe(ref);\n        return () => currentObserver.unobserve(ref);\n    }, [ref, ...externalState]);\n    return Observer.current;\n};\nexport const useInViewEffect = (callback, options = {}, externalState = []) => {\n    const [ref, setRef] = useState(null);\n    useObserver(ref, callback, options, externalState);\n    return setRef;\n};\nexport const useInView = (options, externalState = []) => {\n    const ops = __rest(options, []);\n    const { root = null, rootMargin = '0px 0px 0px 0px', threshold = 0, target, onEnter, onLeave, unobserveOnEnter, } = ops;\n    const [ref, setRef] = useState(null);\n    const [state, setState] = useState({\n        inView: false,\n        entry: null,\n    });\n    const callback = ([entry], observer) => {\n        if (!ref || !entry || !observer)\n            return;\n        const { isIntersecting, intersectionRatio } = entry;\n        if (intersectionRatio >= 0) {\n            const inThreshold = observer.thresholds.some(threshold => intersectionRatio >= threshold);\n            const inView = inThreshold && isIntersecting;\n            setState({\n                inView,\n                entry,\n            });\n            if (inView) {\n                onEnter && onEnter(entry, observer);\n                if (unobserveOnEnter)\n                    observer.unobserve(ref);\n            }\n            else {\n                onLeave && onLeave(entry, observer);\n            }\n        }\n    };\n    useEffect(() => {\n        if (!target)\n            return;\n        setRef(target.current);\n    }, [target]);\n    const observer = useObserver(ref, callback, { root, rootMargin, threshold }, externalState);\n    return [setRef, state.inView, state.entry, observer];\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport CustomNavbar from 'components/universal/custom_navbar';\nimport Row from 'react-bootstrap/Row';\nimport Loading from 'components/universal/loading';\nimport { useParams } from 'react-router-dom';\nimport CustomCard from 'components/universal/custom_card';\n\nconst SIGNED_IN_USER = gql`\n  query signedInUser($userName: String) {\n    signedInUser(userName: $userName) {\n      userName\n      existsInDB\n      synchronizations {\n        geniusID\n        searchResult {\n          text\n          imgUrl\n          forwardingUrl\n        }\n      }\n    }\n  }\n`;\nexport default function Profile() {\n  const { userName } = useParams();\n  const { data: { signedInUser } = {}, loading } = useQuery(SIGNED_IN_USER, {\n    variables: { userName },\n  });\n\n  if (loading) {\n    return <Loading centered />;\n  }\n  if (signedInUser && !signedInUser.existsInDB) {\n    return <p>Couldn't find user</p>;\n  }\n  return (\n    <>\n      <CustomNavbar />\n      <CustomCard>\n        <Row style={{ justifyContent: 'center' }}>\n          <p> {userName} </p>\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>{signedInUser && signedInUser.synchronizationData.length ? <p>This user has not created any synchronizations</p> : <p>Synchronizations</p>}</Row>\n      </CustomCard>\n    </>\n  );\n}\n","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query signedinuser($tokenId: String) {\n    signedInUser(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { signedInUser } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!signedInUser.existsInDB) {\n        setShowAlert(true);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !signedInUser || signedInUser.existsInDB,\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        dismissible={true}\n        onClose={() => setShowAlert(false)}\n        variant='primary'\n      >\n        {\n          <>\n            <Alert.Heading>Create a username for your account</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                postUser();\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt = \"Home\" src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {signedInUser && signedInUser.existsInDB ? (\n            <DropdownButton title={`Signed in as ${signedInUser.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${signedInUser.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  {/* set the token id to the response, which will be used to query the username */}\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n\n                  {/* if passed a tokenId listener by parent, set the value*/}\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}