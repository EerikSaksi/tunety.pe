{"version":3,"sources":["media/home.png","components/navigation/search_result.js","components/universal/custom_card.js","components/navigation/search_results_form.js","components/navigation/home.js","components/universal/google_login_secrets.js","components/universal/custom_navbar.js"],"names":["module","exports","SearchResult","forwardingUrl","imgUrl","text","fadeInMillis","customStyle","history","useHistory","useState","opacity","setOpacity","useEffect","millis","a","Promise","resolve","setTimeout","sleepBeforeAppear","xs","style","transition","marginTop","marginRight","marginLeft","paddingLeft","paddingRight","minHeight","minWidth","onClick","push","src","maxWidth","maxHeight","fontSize","CustomCard","children","title","imgOverlay","linkText","linkHref","useInView","threshold","inViewRef","inView","useWindowSize","innerWidth","innerHeight","ref","className","width","position","left","transform","marginBottom","height","border","Title","textAlign","Link","zIndex","href","ImgOverlay","SearchResultForm","results","input","setInput","loading","defaultValue","fluid","onChange","e","target","value","onSubmit","preventDefault","Control","placeholder","autoFocus","justifyContent","map","result","index","key","centered","AstleyCard","lazy","QUERY","gql","Home","astleyOverlayRef","useRef","useQuery","variables","query","skip","data","HomeIcon","top","bottom","window","scrollTo","current","offsetTop","overflow","geniusSearchResults","undefined","formText","fallback","clientId","SIGNED_IN_USER","USER_NAME_TAKEN","CREATE_USER","CustomNavbar","centerContent","customContent","setParentTokenId","tokenId","setTokenId","useLazyQuery","onCompleted","signedInUser","existsInDB","setShowAlert","fetchPolicy","fetchUserInfo","inputUsername","setInputUsername","userName","userNameTaken","showAlert","useMutation","postUser","Alert","show","dismissible","onClose","variant","Heading","Form","Button","disabled","Navbar","sticky","bg","Brand","size","alt","require","Collapse","Nav","data-icon","data-size","data-show-count","aria-label","DropdownButton","alignSelf","Dropdown","Item","onLogoutSuccess","onSuccess","response","isSignedIn"],"mappings":"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","file":"static/js/10.0f44fabf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.34034ca8.png\";","import React, {useState, useEffect} from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from \"react-router-dom\";\nexport default function SearchResult({forwardingUrl, imgUrl, text, fadeInMillis, customStyle}) {\n  //used for routing the url when this item is clicked\n  const history = useHistory();\n\n  //used for fading in after fadeInMillis\n  const [opacity, setOpacity] = useState(0)\n  useEffect(() => {\n    async function sleepBeforeAppear(millis) {\n      await new Promise(resolve => setTimeout(resolve, millis));\n      setOpacity(1)\n    }\n    sleepBeforeAppear(fadeInMillis)\n  }, [fadeInMillis])\n  return (\n    <Col xs={3}  style={{transition: 'opacity 0.5s', opacity: opacity, marginTop: 10, marginRight:5, marginLeft:5, paddingLeft: '0px', paddingRight: '10px', minHeight: '100%', ...customStyle}}>\n      <Button style={{minWidth: '100%', minHeight: '100%'}} onClick={() => history.push(forwardingUrl)}>\n        <Col>\n          <Image src={imgUrl} style={{minWidth: '50%', minHeight: '50%', maxWidth: '50%', maxHeight: '50%'}} />\n        </Col>\n        <Col>\n          <p style={{fontSize: '20px'}}>\n            {text}\n          </p>\n        </Col>\n      </Button>\n    </Col>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport useWindowSize from '@rehooks/window-size';\nimport {useInView} from 'react-hook-inview'\nexport default function CustomCard ({children, title, imgOverlay, linkText, linkHref, style}) {\n  const [opacity, setOpacity] = useState(0)\n  const [inViewRef, inView] = useInView({\n    threshold: 0.5\n  })\n  useEffect(() => {\n    if (inView) {\n      setOpacity(1)\n    }\n  }, [inView])\n\n\n  const {innerWidth, innerHeight} = useWindowSize()\n  return (\n    <Card ref={inViewRef} className=\"shadow-lg\" style={{width: `${0.8 * innerWidth}`, position: 'relative', left: '50%', transform: 'translate(-50%, 0px)', opacity: opacity, transition: 'opacity 500ms', marginBottom: 20, marginTop: 20, height: innerHeight - 100, ...style}} border='primary' >\n      < >\n        <Card.Title style={{fontSize: 40, textAlign: 'center'}}>\n          {title}\n        </Card.Title>\n        <Card.Link style={{fontSize: 20, textAlign: 'center', zIndex: 1000, }} href={linkHref}>\n          {linkText}\n        </Card.Link>\n        <Card.ImgOverlay>\n          {imgOverlay}\n        </Card.ImgOverlay>\n        {children}\n      </>\n    </Card>\n  )\n}\n","import React  from 'react';\nimport Loading from 'components/universal/loading';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport SearchResult from 'components/navigation/search_result';\nexport default function SearchResultForm({\n  results,\n  input,\n  setInput,\n  loading,\n  defaultValue,\n}) {\n  return (\n    <Container fluid style={{ zIndex: 1000 }}>\n      <Row className='justify-content-md-center'>\n        <Form\n          onChange={(e) => setInput(e.target.value)}\n          onSubmit={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <Form.Control\n            defaultValue={defaultValue ? defaultValue : ''}\n            placeholder='Search'\n            autoFocus\n          />\n        </Form>\n      </Row>\n      <Row style={{ justifyContent: 'center', marginTop: 5 }}>\n        {input === '' ? null : !loading && results ? (\n          results.map((result, index) => (\n            <SearchResult\n              key={index}\n              {...result}\n              fadeInMillis={(index + 1) * 100}\n            />\n          ))\n        ) : (\n          <Loading centered={false} />\n        )}\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useRef, lazy, Suspense } from 'react';\nimport Loading from 'components/universal/loading';\nimport SearchResultForm from 'components/navigation/search_results_form';\nimport { useQuery, gql } from '@apollo/client';\nimport CustomNavBar from 'components/universal/custom_navbar';\nimport CustomCard from 'components/universal/custom_card';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport HomeIcon from 'media/home.png';\nconst AstleyCard = lazy(() => import('components/navigation/astley_card'));\n\nconst QUERY = gql`\n  query geniussearchresults($query: String) {\n    geniusSearchResults(query: $query) {\n      imgUrl\n      text\n      forwardingUrl\n    }\n  }\n`;\nexport default function Home() {\n  //input of the form, passed to the form but declared here as required for checking if data needs to be fetched\n  const [input, setInput] = useState('');\n\n  const astleyOverlayRef = useRef();\n\n  const { data, loading } = useQuery(QUERY, {\n    variables: { query: input },\n    skip: input === '',\n  });\n\n  return (\n    <>\n      <CustomNavBar />\n      <Container>\n        <CustomCard title={'Type your tunes!'} style={{ height: '30%' }}>\n          <Image src={HomeIcon} style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', width: 1373 / 3, height: 382 / 3, zIndex: 1000 }}></Image>\n          <Button style={{ position: 'absolute', left: '50%', bottom: '10%', transform: 'translate(-50%, 0)' }} onClick={() => window.scrollTo(0, astleyOverlayRef.current.offsetTop)}>\n            How does this site work?\n          </Button>\n        </CustomCard>\n        <CustomCard title={'Search For An Artist/Song/Album'} style={{ minHeight: `calc(70% - 120px)`, height: 'auto', overflow: 'hidden' }}>\n          <Row style={{ justifyContent: 'center', marginBottom: 12 }}></Row>\n          <SearchResultForm results={data ? data.geniusSearchResults : undefined} input={input} setInput={setInput} formText={'Search For An Artist/Song/Album'} loading={loading} />\n        </CustomCard>\n        <div ref={astleyOverlayRef}>\n          <Suspense fallback={<Loading />}>\n            <AstleyCard />\n          </Suspense>\n        </div>\n      </Container>\n    </>\n  );\n}\n","export const clientId = '359548864121-f3blhpvvgm17oqoun8tvh2708a8loujm.apps.googleusercontent.com'\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport GitHubButton from 'react-github-btn';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { clientId } from 'components/universal/google_login_secrets';\nimport { useQuery, useLazyQuery, useMutation, gql } from '@apollo/client';\nimport useWindowSize from '@rehooks/window-size';\n\nconst SIGNED_IN_USER = gql`\n  query signedinuser($tokenId: String) {\n    signedInUser(tokenId: $tokenId) {\n      userName\n      existsInDB\n    }\n  }\n`;\n\nconst USER_NAME_TAKEN = gql`\n  query usernametaken($userName: String!) {\n    userNameTaken(userName: $userName)\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation createuser($tokenId: String, $userName: String) {\n    createUser(tokenId: $tokenId, userName: $userName)\n  }\n`;\n\nexport default function CustomNavbar({ centerContent, customContent, setParentTokenId }) {\n  const history = useHistory();\n\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  //set by google client onSuccess\n  const [tokenId, setTokenId] = useState('');\n\n  //this will be called after the tokenId has been set and fetches the username of the user\n  const [fetchUserInfo, { data: { signedInUser } = {} }] = useLazyQuery(SIGNED_IN_USER, {\n    variables: { tokenId },\n    onCompleted: () => {\n      if (!signedInUser.existsInDB) {\n        setShowAlert(true);\n      }\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  //this userName can be edited from the alert form\n  const [inputUsername, setInputUsername] = useState('');\n\n  const { data: { userNameTaken } = {} } = useQuery(USER_NAME_TAKEN, {\n    variables: { userName: inputUsername },\n    skip: !signedInUser || signedInUser.existsInDB,\n  });\n\n  //alert that lets users create users\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [postUser] = useMutation(CREATE_USER, {\n    variables: { userName: inputUsername, tokenId: tokenId },\n\n    onCompleted: () => {\n      fetchUserInfo({ variables: { tokenId: tokenId } });\n      setShowAlert(false);\n    },\n  });\n\n  return (\n    <>\n      <Alert\n        className='shadow-lg'\n        style={{\n          position: 'absolute',\n          left: innerWidth * 0.5,\n          top: innerHeight * 0.5,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1000,\n        }}\n        show={showAlert}\n        dismissible={true}\n        onClose={() => setShowAlert(false)}\n        variant='primary'\n      >\n        {\n          <>\n            <Alert.Heading>Create a username for your account</Alert.Heading>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                postUser();\n              }}\n              onChange={(e) => setInputUsername(e.target.value)}\n            >\n              <Form.Control style={{ marginTop: 'em' }} placeholder='Enter username for your new account' autoFocus />\n              <Button\n                style={{\n                  position: 'relative',\n                  marginTop: '1em',\n                  left: '50%',\n                  transform: 'translate(-50%, 0px)',\n                }}\n                disabled={userNameTaken}\n                onClick={() => postUser()}\n              >\n                Create account\n              </Button>\n            </Form>\n          </>\n        }\n      </Alert>\n      <Navbar style={{ height: 60 }} sticky='top' bg='secondary' variant='dark'>\n        <Navbar.Brand onClick={() => history.push('/')}>\n          <Button variant='outline-primary' style={{ justifyContent: 'left', width: 142, height: 44 }} size='sm'>\n            <img alt = \"Home\" src={require('../../media/home.png')} style={{ top: 0, height: '100%', width: '100%' }} />\n          </Button>\n        </Navbar.Brand>\n        {customContent}\n        <Navbar.Collapse\n          style={{\n            position: 'absolute',\n            transform: 'translate(-50%, 0%)',\n            left: '50%',\n          }}\n        >\n          {centerContent}\n        </Navbar.Collapse>\n        <Nav className='ml-auto'>\n          <div\n            style={{\n              marginRight: 10,\n              marginTop: 20,\n              marginBottom: 20,\n            }}\n          >\n            <GitHubButton href='https://github.com/EerikSaksi/type_to_lyrics' data-icon='octicon-star' data-size='large' data-show-count='true' aria-label='Star EerikSaksi/type_to_lyrics on GitHub'>\n              Star\n            </GitHubButton>\n          </div>\n          {signedInUser && signedInUser.existsInDB ? (\n            <DropdownButton title={`Signed in as ${signedInUser.userName}`} style={{ alignSelf: 'center' }}>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <Button style={{ width: '100%' }} onClick={() => history.push(`/user/${signedInUser.userName}`)}>\n                  View your profile\n                </Button>\n              </Dropdown.Item>\n              <Dropdown.Item style={{ paddingLeft: 4, paddingRight: 4 }}>\n                <GoogleLogout\n                  clientId={clientId}\n                  onLogoutSuccess={() => {\n                    setTokenId('');\n                    fetchUserInfo();\n                  }}\n                />\n              </Dropdown.Item>\n            </DropdownButton>\n          ) : showAlert ? (\n            <p style={{ fontSize: 20, marginTop: 16 }}> Logging in... </p>\n          ) : (\n            <div style={{ height: '100%', alignSelf: 'center' }}>\n              <GoogleLogin\n                clientId={clientId}\n                onSuccess={(response) => {\n                  {/* set the token id to the response, which will be used to query the username */}\n                  setTokenId(response.tokenId);\n                  fetchUserInfo();\n\n                  {/* if passed a tokenId listener by parent, set the value*/}\n                  if (setParentTokenId) {\n                    setParentTokenId(response.tokenId);\n                  }\n                }}\n                isSignedIn={true}\n              />\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n"],"sourceRoot":""}